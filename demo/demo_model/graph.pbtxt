node {
  name: "load_images/input_producer/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "/exp/nanne/imagenet/tfrecords/train.tfrecords"
      }
    }
  }
}
node {
  name: "load_images/input_producer/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "load_images/input_producer/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "load_images/input_producer/Greater"
  op: "Greater"
  input: "load_images/input_producer/Size"
  input: "load_images/input_producer/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/input_producer/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "load_images/input_producer/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "load_images/input_producer/Assert/Assert"
  op: "Assert"
  input: "load_images/input_producer/Greater"
  input: "load_images/input_producer/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "load_images/input_producer/Identity"
  op: "Identity"
  input: "load_images/input_producer/Const"
  input: "^load_images/input_producer/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "load_images/input_producer/RandomShuffle"
  op: "RandomShuffle"
  input: "load_images/input_producer/Identity"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8
    }
  }
}
node {
  name: "load_images/input_producer"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "load_images/input_producer/input_producer_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "load_images/input_producer"
  input: "load_images/input_producer/RandomShuffle"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "load_images/input_producer/input_producer_Close"
  op: "QueueCloseV2"
  input: "load_images/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "load_images/input_producer/input_producer_Close_1"
  op: "QueueCloseV2"
  input: "load_images/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "load_images/input_producer/input_producer_Size"
  op: "QueueSizeV2"
  input: "load_images/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/input_producer/Cast"
  op: "Cast"
  input: "load_images/input_producer/input_producer_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/input_producer/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "load_images/input_producer/mul"
  op: "Mul"
  input: "load_images/input_producer/Cast"
  input: "load_images/input_producer/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/input_producer/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "load_images/input_producer/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "load_images/input_producer/fraction_of_32_full"
  op: "ScalarSummary"
  input: "load_images/input_producer/fraction_of_32_full/tags"
  input: "load_images/input_producer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/TFRecordReaderV2"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "load_images/ReaderReadV2"
  op: "ReaderReadV2"
  input: "load_images/TFRecordReaderV2"
  input: "load_images/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/ExpandDims"
  op: "ExpandDims"
  input: "load_images/ReaderReadV2:1"
  input: "load_images/ParseSingleExample/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/ParseExample/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/ParseExample/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/ParseExample/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/ParseExample/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/ParseExample/ParseExample/names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/ParseExample/ParseExample/dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "id"
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/ParseExample/ParseExample/dense_keys_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image"
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/ParseExample/ParseExample/dense_keys_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "image_size"
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/ParseExample/ParseExample/dense_keys_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "path"
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/ParseExample/ParseExample"
  op: "ParseExample"
  input: "load_images/ParseSingleExample/ExpandDims"
  input: "load_images/ParseSingleExample/ParseExample/ParseExample/names"
  input: "load_images/ParseSingleExample/ParseExample/ParseExample/dense_keys_0"
  input: "load_images/ParseSingleExample/ParseExample/ParseExample/dense_keys_1"
  input: "load_images/ParseSingleExample/ParseExample/ParseExample/dense_keys_2"
  input: "load_images/ParseSingleExample/ParseExample/ParseExample/dense_keys_3"
  input: "load_images/ParseSingleExample/ParseExample/Const"
  input: "load_images/ParseSingleExample/ParseExample/Const_1"
  input: "load_images/ParseSingleExample/ParseExample/Const_2"
  input: "load_images/ParseSingleExample/ParseExample/Const_3"
  attr {
    key: "Ndense"
    value {
      i: 4
    }
  }
  attr {
    key: "Nsparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tdense"
    value {
      list {
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dense_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: 3
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/Squeeze_id"
  op: "Squeeze"
  input: "load_images/ParseSingleExample/ParseExample/ParseExample"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/Squeeze_image"
  op: "Squeeze"
  input: "load_images/ParseSingleExample/ParseExample/ParseExample:1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/Squeeze_image_size"
  op: "Squeeze"
  input: "load_images/ParseSingleExample/ParseExample/ParseExample:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "load_images/ParseSingleExample/Squeeze_path"
  op: "Squeeze"
  input: "load_images/ParseSingleExample/ParseExample/ParseExample:3"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "load_images/DecodeRaw"
  op: "DecodeRaw"
  input: "load_images/ParseSingleExample/Squeeze_image"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "load_images/Cast"
  op: "Cast"
  input: "load_images/ParseSingleExample/Squeeze_image_size"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "load_images/Reshape"
  op: "Reshape"
  input: "load_images/DecodeRaw"
  input: "load_images/Cast"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "load_images/Squeeze"
  op: "Squeeze"
  input: "load_images/Reshape"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "load_images/preprocess_input/convert_image/Cast"
  op: "Cast"
  input: "load_images/Squeeze"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "load_images/preprocess_input/convert_image/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00392156885937
      }
    }
  }
}
node {
  name: "load_images/preprocess_input/convert_image"
  op: "Mul"
  input: "load_images/preprocess_input/convert_image/Cast"
  input: "load_images/preprocess_input/convert_image/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "load_images/preprocess_input/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "load_images/preprocess_input/mul"
  op: "Mul"
  input: "load_images/preprocess_input/convert_image"
  input: "load_images/preprocess_input/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "load_images/preprocess_input/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "load_images/preprocess_input/sub"
  op: "Sub"
  input: "load_images/preprocess_input/mul"
  input: "load_images/preprocess_input/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "load_images/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "load_images/ExpandDims"
  op: "ExpandDims"
  input: "load_images/preprocess_input/sub"
  input: "load_images/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "load_images/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "load_images/Squeeze_1"
  op: "Squeeze"
  input: "load_images/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 0
      }
    }
  }
}
node {
  name: "load_images/random_uniform/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "load_images/random_uniform/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "load_images/random_uniform/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "load_images/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "load_images/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1860795210
    }
  }
}
node {
  name: "load_images/random_uniform/sub"
  op: "Sub"
  input: "load_images/random_uniform/max"
  input: "load_images/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/random_uniform/mul"
  op: "Mul"
  input: "load_images/random_uniform/RandomUniform"
  input: "load_images/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/random_uniform"
  op: "Add"
  input: "load_images/random_uniform/mul"
  input: "load_images/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "load_images/Less"
  op: "Less"
  input: "load_images/random_uniform"
  input: "load_images/Less/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/Select/t"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "load_images/Select/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "load_images/Select"
  op: "Select"
  input: "load_images/Less"
  input: "load_images/Select/t"
  input: "load_images/Select/e"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "load_images/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "load_images/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "load_images/strided_slice/stack_2/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "load_images/strided_slice/stack_2/2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "load_images/strided_slice/stack_2"
  op: "Pack"
  input: "load_images/strided_slice/stack_2/0"
  input: "load_images/Select"
  input: "load_images/strided_slice/stack_2/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "load_images/strided_slice"
  op: "StridedSlice"
  input: "load_images/Squeeze_1"
  input: "load_images/strided_slice/stack"
  input: "load_images/strided_slice/stack_1"
  input: "load_images/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "load_images/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "load_images/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "load_images/random_uniform_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "load_images/random_uniform_1/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "load_images/random_uniform_1"
  op: "RandomUniformInt"
  input: "load_images/random_uniform_1/shape"
  input: "load_images/random_uniform_1/min"
  input: "load_images/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 74
    }
  }
}
node {
  name: "load_images/random_uniform_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "load_images/random_uniform_2/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "load_images/random_uniform_2"
  op: "RandomUniformInt"
  input: "load_images/random_uniform_2/shape"
  input: "load_images/random_uniform_2/min"
  input: "load_images/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 77
    }
  }
}
node {
  name: "load_images/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "load_images/sub"
  op: "Sub"
  input: "load_images/Const"
  input: "load_images/random_uniform_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "load_images/sub_1"
  op: "Sub"
  input: "load_images/Const_1"
  input: "load_images/random_uniform_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "load_images/stack/0"
  op: "Pack"
  input: "load_images/random_uniform_2"
  input: "load_images/sub"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "load_images/stack/1"
  op: "Pack"
  input: "load_images/random_uniform_1"
  input: "load_images/sub_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "load_images/stack"
  op: "Pack"
  input: "load_images/stack/0"
  input: "load_images/stack/1"
  input: "load_images/zeros"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "load_images/Squeeze_2"
  op: "Squeeze"
  input: "load_images/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "load_images/ones"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "load_images/Pad"
  op: "Pad"
  input: "load_images/ones"
  input: "load_images/Squeeze_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "load_images/sub_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "load_images/sub_2"
  op: "Sub"
  input: "load_images/sub_2/x"
  input: "load_images/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "load_images/Mul"
  op: "Mul"
  input: "load_images/strided_slice"
  input: "load_images/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "shuffle_batch/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 1600
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 800
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 91
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "shuffle_batch/cond/Switch"
  op: "Switch"
  input: "shuffle_batch/Const"
  input: "shuffle_batch/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/cond/switch_t"
  op: "Identity"
  input: "shuffle_batch/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/cond/switch_f"
  op: "Identity"
  input: "shuffle_batch/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/cond/pred_id"
  op: "Identity"
  input: "shuffle_batch/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/cond/random_shuffle_queue_enqueue/Switch"
  op: "Switch"
  input: "shuffle_batch/random_shuffle_queue"
  input: "shuffle_batch/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shuffle_batch/random_shuffle_queue"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/cond/random_shuffle_queue_enqueue/Switch_1"
  op: "Switch"
  input: "load_images/ParseSingleExample/Squeeze_path"
  input: "shuffle_batch/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@load_images/ParseSingleExample/Squeeze_path"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/cond/random_shuffle_queue_enqueue/Switch_2"
  op: "Switch"
  input: "load_images/Mul"
  input: "shuffle_batch/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@load_images/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/cond/random_shuffle_queue_enqueue/Switch_3"
  op: "Switch"
  input: "load_images/strided_slice"
  input: "shuffle_batch/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@load_images/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/cond/random_shuffle_queue_enqueue/Switch_4"
  op: "Switch"
  input: "load_images/Pad"
  input: "shuffle_batch/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@load_images/Pad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/cond/random_shuffle_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "shuffle_batch/cond/random_shuffle_queue_enqueue/Switch:1"
  input: "shuffle_batch/cond/random_shuffle_queue_enqueue/Switch_1:1"
  input: "shuffle_batch/cond/random_shuffle_queue_enqueue/Switch_2:1"
  input: "shuffle_batch/cond/random_shuffle_queue_enqueue/Switch_3:1"
  input: "shuffle_batch/cond/random_shuffle_queue_enqueue/Switch_4:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "shuffle_batch/cond/control_dependency"
  op: "Identity"
  input: "shuffle_batch/cond/switch_t"
  input: "^shuffle_batch/cond/random_shuffle_queue_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shuffle_batch/cond/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/cond/NoOp"
  op: "NoOp"
  input: "^shuffle_batch/cond/switch_f"
}
node {
  name: "shuffle_batch/cond/control_dependency_1"
  op: "Identity"
  input: "shuffle_batch/cond/switch_f"
  input: "^shuffle_batch/cond/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@shuffle_batch/cond/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/cond/Merge"
  op: "Merge"
  input: "shuffle_batch/cond/control_dependency_1"
  input: "shuffle_batch/cond/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "shuffle_batch/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "shuffle_batch/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "shuffle_batch/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "shuffle_batch/random_shuffle_queue_Size"
  op: "QueueSizeV2"
  input: "shuffle_batch/random_shuffle_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 800
      }
    }
  }
}
node {
  name: "shuffle_batch/sub"
  op: "Sub"
  input: "shuffle_batch/random_shuffle_queue_Size"
  input: "shuffle_batch/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "shuffle_batch/Maximum"
  op: "Maximum"
  input: "shuffle_batch/Maximum/x"
  input: "shuffle_batch/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/Cast"
  op: "Cast"
  input: "shuffle_batch/Maximum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00124999997206
      }
    }
  }
}
node {
  name: "shuffle_batch/mul"
  op: "Mul"
  input: "shuffle_batch/Cast"
  input: "shuffle_batch/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/fraction_over_800_of_800_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "shuffle_batch/fraction_over_800_of_800_full"
      }
    }
  }
}
node {
  name: "shuffle_batch/fraction_over_800_of_800_full"
  op: "ScalarSummary"
  input: "shuffle_batch/fraction_over_800_of_800_full/tags"
  input: "shuffle_batch/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "shuffle_batch/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "shuffle_batch"
  op: "QueueDequeueManyV2"
  input: "shuffle_batch/random_shuffle_queue"
  input: "shuffle_batch/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0713376402855
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0713376402855
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/encoder_1/conv/filter/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 123
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/encoder_1/conv/filter/Initializer/random_uniform/max"
  input: "generator/encoder_1/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/encoder_1/conv/filter/Initializer/random_uniform/RandomUniform"
  input: "generator/encoder_1/conv/filter/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Initializer/random_uniform"
  op: "Add"
  input: "generator/encoder_1/conv/filter/Initializer/random_uniform/mul"
  input: "generator/encoder_1/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Assign"
  op: "Assign"
  input: "generator/encoder_1/conv/filter"
  input: "generator/encoder_1/conv/filter/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/read"
  op: "Identity"
  input: "generator/encoder_1/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/conv/Conv2D"
  op: "Conv2D"
  input: "shuffle_batch:1"
  input: "generator/encoder_1/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/Identity"
  op: "Identity"
  input: "generator/encoder/encoder_1/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/offset/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/encoder_1/batchnorm/offset"
  input: "generator/encoder_1/batchnorm/offset/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/offset/read"
  op: "Identity"
  input: "generator/encoder_1/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_1/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 139
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_1/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_1/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_1/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/encoder_1/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/encoder_1/batchnorm/scale"
  input: "generator/encoder_1/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/read"
  op: "Identity"
  input: "generator/encoder_1/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/Mean"
  op: "Mean"
  input: "generator/encoder/encoder_1/batchnorm/Identity"
  input: "generator/encoder/encoder_1/batchnorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/encoder/encoder_1/batchnorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 262144.0
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "generator/encoder/encoder_1/batchnorm/Identity"
  input: "generator/encoder/encoder_1/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/encoder/encoder_1/batchnorm/Identity"
  input: "generator/encoder/encoder_1/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub"
  input: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/Reshape"
  op: "Reshape"
  input: "generator/encoder/encoder_1/batchnorm/moments/StopGradient"
  input: "generator/encoder/encoder_1/batchnorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Const"
  input: "^generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "^generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator/encoder/encoder_1/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/normalize/mean"
  op: "Add"
  input: "generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean"
  input: "generator/encoder/encoder_1/batchnorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/normalize/Mul"
  op: "Mul"
  input: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator/encoder/encoder_1/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/normalize/Square"
  op: "Square"
  input: "generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/moments/normalize/variance"
  op: "Sub"
  input: "generator/encoder/encoder_1/batchnorm/moments/normalize/Mul"
  input: "generator/encoder/encoder_1/batchnorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/encoder/encoder_1/batchnorm/moments/normalize/variance"
  input: "generator/encoder/encoder_1/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/encoder/encoder_1/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/encoder/encoder_1/batchnorm/batchnorm/Rsqrt"
  input: "generator/encoder_1/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_1/batchnorm/Identity"
  input: "generator/encoder/encoder_1/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/encoder/encoder_1/batchnorm/moments/normalize/mean"
  input: "generator/encoder/encoder_1/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/encoder_1/batchnorm/offset/read"
  input: "generator/encoder/encoder_1/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/encoder/encoder_1/batchnorm/batchnorm/mul_1"
  input: "generator/encoder/encoder_1/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_1/Elu"
  op: "Elu"
  input: "generator/encoder/encoder_1/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0510310381651
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0510310381651
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/encoder_2/conv/filter/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 175
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/encoder_2/conv/filter/Initializer/random_uniform/max"
  input: "generator/encoder_2/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/encoder_2/conv/filter/Initializer/random_uniform/RandomUniform"
  input: "generator/encoder_2/conv/filter/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Initializer/random_uniform"
  op: "Add"
  input: "generator/encoder_2/conv/filter/Initializer/random_uniform/mul"
  input: "generator/encoder_2/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Assign"
  op: "Assign"
  input: "generator/encoder_2/conv/filter"
  input: "generator/encoder_2/conv/filter/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/read"
  op: "Identity"
  input: "generator/encoder_2/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/conv/Conv2D"
  op: "Conv2D"
  input: "generator/encoder/encoder_1/Elu"
  input: "generator/encoder_2/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/Identity"
  op: "Identity"
  input: "generator/encoder/encoder_2/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/offset"
  input: "generator/encoder_2/batchnorm/offset/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/read"
  op: "Identity"
  input: "generator/encoder_2/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 191
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/encoder_2/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/scale"
  input: "generator/encoder_2/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/read"
  op: "Identity"
  input: "generator/encoder_2/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/Mean"
  op: "Mean"
  input: "generator/encoder/encoder_2/batchnorm/Identity"
  input: "generator/encoder/encoder_2/batchnorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/encoder/encoder_2/batchnorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 65536.0
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "generator/encoder/encoder_2/batchnorm/Identity"
  input: "generator/encoder/encoder_2/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/encoder/encoder_2/batchnorm/Identity"
  input: "generator/encoder/encoder_2/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub"
  input: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/Reshape"
  op: "Reshape"
  input: "generator/encoder/encoder_2/batchnorm/moments/StopGradient"
  input: "generator/encoder/encoder_2/batchnorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Const"
  input: "^generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "^generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator/encoder/encoder_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/normalize/mean"
  op: "Add"
  input: "generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean"
  input: "generator/encoder/encoder_2/batchnorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/normalize/Mul"
  op: "Mul"
  input: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator/encoder/encoder_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/normalize/Square"
  op: "Square"
  input: "generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/moments/normalize/variance"
  op: "Sub"
  input: "generator/encoder/encoder_2/batchnorm/moments/normalize/Mul"
  input: "generator/encoder/encoder_2/batchnorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/encoder/encoder_2/batchnorm/moments/normalize/variance"
  input: "generator/encoder/encoder_2/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/encoder/encoder_2/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/encoder/encoder_2/batchnorm/batchnorm/Rsqrt"
  input: "generator/encoder_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_2/batchnorm/Identity"
  input: "generator/encoder/encoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/encoder/encoder_2/batchnorm/moments/normalize/mean"
  input: "generator/encoder/encoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/encoder_2/batchnorm/offset/read"
  input: "generator/encoder/encoder_2/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/encoder/encoder_2/batchnorm/batchnorm/mul_1"
  input: "generator/encoder/encoder_2/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_2/Elu"
  op: "Elu"
  input: "generator/encoder/encoder_2/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/Initializer/Diag"
  op: "Diag"
  input: "generator/encoder_3/dilated_conv/filter/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/Initializer/Reshape"
  op: "Reshape"
  input: "generator/encoder_3/dilated_conv/filter/Initializer/Diag"
  input: "generator/encoder_3/dilated_conv/filter/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/Initializer/Pad/paddings"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/Initializer/Pad"
  op: "Pad"
  input: "generator/encoder_3/dilated_conv/filter/Initializer/Reshape"
  input: "generator/encoder_3/dilated_conv/filter/Initializer/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/Assign"
  op: "Assign"
  input: "generator/encoder_3/dilated_conv/filter"
  input: "generator/encoder_3/dilated_conv/filter/Initializer/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/read"
  op: "Identity"
  input: "generator/encoder_3/dilated_conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "generator/encoder/encoder_2/Elu"
  input: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/SpaceToBatchND/block_shape"
  input: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d"
  op: "Conv2D"
  input: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/SpaceToBatchND"
  input: "generator/encoder_3/dilated_conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d"
  input: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/BatchToSpaceND/block_shape"
  input: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/Identity"
  op: "Identity"
  input: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/BatchToSpaceND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/offset"
  input: "generator/encoder_3/batchnorm/offset/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/read"
  op: "Identity"
  input: "generator/encoder_3/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 248
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/encoder_3/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/scale"
  input: "generator/encoder_3/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/read"
  op: "Identity"
  input: "generator/encoder_3/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/Mean"
  op: "Mean"
  input: "generator/encoder/encoder_3/batchnorm/Identity"
  input: "generator/encoder/encoder_3/batchnorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/encoder/encoder_3/batchnorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 65536.0
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "generator/encoder/encoder_3/batchnorm/Identity"
  input: "generator/encoder/encoder_3/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/encoder/encoder_3/batchnorm/Identity"
  input: "generator/encoder/encoder_3/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub"
  input: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/Reshape"
  op: "Reshape"
  input: "generator/encoder/encoder_3/batchnorm/moments/StopGradient"
  input: "generator/encoder/encoder_3/batchnorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Const"
  input: "^generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "^generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator/encoder/encoder_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/normalize/mean"
  op: "Add"
  input: "generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean"
  input: "generator/encoder/encoder_3/batchnorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/normalize/Mul"
  op: "Mul"
  input: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator/encoder/encoder_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/normalize/Square"
  op: "Square"
  input: "generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/moments/normalize/variance"
  op: "Sub"
  input: "generator/encoder/encoder_3/batchnorm/moments/normalize/Mul"
  input: "generator/encoder/encoder_3/batchnorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/encoder/encoder_3/batchnorm/moments/normalize/variance"
  input: "generator/encoder/encoder_3/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/encoder/encoder_3/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/encoder/encoder_3/batchnorm/batchnorm/Rsqrt"
  input: "generator/encoder_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_3/batchnorm/Identity"
  input: "generator/encoder/encoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/encoder/encoder_3/batchnorm/moments/normalize/mean"
  input: "generator/encoder/encoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/encoder_3/batchnorm/offset/read"
  input: "generator/encoder/encoder_3/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/encoder/encoder_3/batchnorm/batchnorm/mul_1"
  input: "generator/encoder/encoder_3/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_3/Elu"
  op: "Elu"
  input: "generator/encoder/encoder_3/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/Initializer/Diag"
  op: "Diag"
  input: "generator/encoder_4/dilated_conv/filter/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/Initializer/Reshape"
  op: "Reshape"
  input: "generator/encoder_4/dilated_conv/filter/Initializer/Diag"
  input: "generator/encoder_4/dilated_conv/filter/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/Initializer/Pad/paddings"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/Initializer/Pad"
  op: "Pad"
  input: "generator/encoder_4/dilated_conv/filter/Initializer/Reshape"
  input: "generator/encoder_4/dilated_conv/filter/Initializer/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/Assign"
  op: "Assign"
  input: "generator/encoder_4/dilated_conv/filter"
  input: "generator/encoder_4/dilated_conv/filter/Initializer/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/read"
  op: "Identity"
  input: "generator/encoder_4/dilated_conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "generator/encoder/encoder_3/Elu"
  input: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/SpaceToBatchND/block_shape"
  input: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 18
          }
          dim {
            size: 18
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d"
  op: "Conv2D"
  input: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/SpaceToBatchND"
  input: "generator/encoder_4/dilated_conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d"
  input: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/BatchToSpaceND/block_shape"
  input: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/Identity"
  op: "Identity"
  input: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/BatchToSpaceND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/offset"
  input: "generator/encoder_4/batchnorm/offset/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/read"
  op: "Identity"
  input: "generator/encoder_4/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 305
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/encoder_4/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/scale"
  input: "generator/encoder_4/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/read"
  op: "Identity"
  input: "generator/encoder_4/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/Mean"
  op: "Mean"
  input: "generator/encoder/encoder_4/batchnorm/Identity"
  input: "generator/encoder/encoder_4/batchnorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/encoder/encoder_4/batchnorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 65536.0
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "generator/encoder/encoder_4/batchnorm/Identity"
  input: "generator/encoder/encoder_4/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/encoder/encoder_4/batchnorm/Identity"
  input: "generator/encoder/encoder_4/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub"
  input: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/Reshape"
  op: "Reshape"
  input: "generator/encoder/encoder_4/batchnorm/moments/StopGradient"
  input: "generator/encoder/encoder_4/batchnorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Const"
  input: "^generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "^generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator/encoder/encoder_4/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/normalize/mean"
  op: "Add"
  input: "generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean"
  input: "generator/encoder/encoder_4/batchnorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/normalize/Mul"
  op: "Mul"
  input: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator/encoder/encoder_4/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/normalize/Square"
  op: "Square"
  input: "generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/moments/normalize/variance"
  op: "Sub"
  input: "generator/encoder/encoder_4/batchnorm/moments/normalize/Mul"
  input: "generator/encoder/encoder_4/batchnorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/encoder/encoder_4/batchnorm/moments/normalize/variance"
  input: "generator/encoder/encoder_4/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/encoder/encoder_4/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/encoder/encoder_4/batchnorm/batchnorm/Rsqrt"
  input: "generator/encoder_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_4/batchnorm/Identity"
  input: "generator/encoder/encoder_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/encoder/encoder_4/batchnorm/moments/normalize/mean"
  input: "generator/encoder/encoder_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/encoder_4/batchnorm/offset/read"
  input: "generator/encoder/encoder_4/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/encoder/encoder_4/batchnorm/batchnorm/mul_1"
  input: "generator/encoder/encoder_4/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_4/Elu"
  op: "Elu"
  input: "generator/encoder/encoder_4/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/Initializer/Diag"
  op: "Diag"
  input: "generator/encoder_5/dilated_conv/filter/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/Initializer/Reshape"
  op: "Reshape"
  input: "generator/encoder_5/dilated_conv/filter/Initializer/Diag"
  input: "generator/encoder_5/dilated_conv/filter/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/Initializer/Pad/paddings"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/Initializer/Pad"
  op: "Pad"
  input: "generator/encoder_5/dilated_conv/filter/Initializer/Reshape"
  input: "generator/encoder_5/dilated_conv/filter/Initializer/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/Assign"
  op: "Assign"
  input: "generator/encoder_5/dilated_conv/filter"
  input: "generator/encoder_5/dilated_conv/filter/Initializer/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/read"
  op: "Identity"
  input: "generator/encoder_5/dilated_conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "generator/encoder/encoder_4/Elu"
  input: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/SpaceToBatchND/block_shape"
  input: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d"
  op: "Conv2D"
  input: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/SpaceToBatchND"
  input: "generator/encoder_5/dilated_conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d"
  input: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/BatchToSpaceND/block_shape"
  input: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/Identity"
  op: "Identity"
  input: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/BatchToSpaceND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/offset"
  input: "generator/encoder_5/batchnorm/offset/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/read"
  op: "Identity"
  input: "generator/encoder_5/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 362
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/encoder_5/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/scale"
  input: "generator/encoder_5/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/read"
  op: "Identity"
  input: "generator/encoder_5/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/Mean"
  op: "Mean"
  input: "generator/encoder/encoder_5/batchnorm/Identity"
  input: "generator/encoder/encoder_5/batchnorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/encoder/encoder_5/batchnorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 65536.0
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "generator/encoder/encoder_5/batchnorm/Identity"
  input: "generator/encoder/encoder_5/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/encoder/encoder_5/batchnorm/Identity"
  input: "generator/encoder/encoder_5/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub"
  input: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/Reshape"
  op: "Reshape"
  input: "generator/encoder/encoder_5/batchnorm/moments/StopGradient"
  input: "generator/encoder/encoder_5/batchnorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Const"
  input: "^generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "^generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator/encoder/encoder_5/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/normalize/mean"
  op: "Add"
  input: "generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean"
  input: "generator/encoder/encoder_5/batchnorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/normalize/Mul"
  op: "Mul"
  input: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator/encoder/encoder_5/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/normalize/Square"
  op: "Square"
  input: "generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/moments/normalize/variance"
  op: "Sub"
  input: "generator/encoder/encoder_5/batchnorm/moments/normalize/Mul"
  input: "generator/encoder/encoder_5/batchnorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/encoder/encoder_5/batchnorm/moments/normalize/variance"
  input: "generator/encoder/encoder_5/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/encoder/encoder_5/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/encoder/encoder_5/batchnorm/batchnorm/Rsqrt"
  input: "generator/encoder_5/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_5/batchnorm/Identity"
  input: "generator/encoder/encoder_5/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/encoder/encoder_5/batchnorm/moments/normalize/mean"
  input: "generator/encoder/encoder_5/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/encoder_5/batchnorm/offset/read"
  input: "generator/encoder/encoder_5/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/encoder/encoder_5/batchnorm/batchnorm/mul_1"
  input: "generator/encoder/encoder_5/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_5/Elu"
  op: "Elu"
  input: "generator/encoder/encoder_5/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/Initializer/Diag"
  op: "Diag"
  input: "generator/encoder_6/dilated_conv/filter/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/Initializer/Reshape"
  op: "Reshape"
  input: "generator/encoder_6/dilated_conv/filter/Initializer/Diag"
  input: "generator/encoder_6/dilated_conv/filter/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/Initializer/Pad/paddings"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/Initializer/Pad"
  op: "Pad"
  input: "generator/encoder_6/dilated_conv/filter/Initializer/Reshape"
  input: "generator/encoder_6/dilated_conv/filter/Initializer/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/Assign"
  op: "Assign"
  input: "generator/encoder_6/dilated_conv/filter"
  input: "generator/encoder_6/dilated_conv/filter/Initializer/Pad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/read"
  op: "Identity"
  input: "generator/encoder_6/dilated_conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "generator/encoder/encoder_5/Elu"
  input: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/SpaceToBatchND/block_shape"
  input: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d"
  op: "Conv2D"
  input: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/SpaceToBatchND"
  input: "generator/encoder_6/dilated_conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d"
  input: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/BatchToSpaceND/block_shape"
  input: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/Identity"
  op: "Identity"
  input: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/BatchToSpaceND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/offset"
  input: "generator/encoder_6/batchnorm/offset/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/read"
  op: "Identity"
  input: "generator/encoder_6/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 419
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/encoder_6/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/scale"
  input: "generator/encoder_6/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/read"
  op: "Identity"
  input: "generator/encoder_6/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/Mean"
  op: "Mean"
  input: "generator/encoder/encoder_6/batchnorm/Identity"
  input: "generator/encoder/encoder_6/batchnorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/encoder/encoder_6/batchnorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 65536.0
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "generator/encoder/encoder_6/batchnorm/Identity"
  input: "generator/encoder/encoder_6/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/encoder/encoder_6/batchnorm/Identity"
  input: "generator/encoder/encoder_6/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub"
  input: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/Reshape"
  op: "Reshape"
  input: "generator/encoder/encoder_6/batchnorm/moments/StopGradient"
  input: "generator/encoder/encoder_6/batchnorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Const"
  input: "^generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "^generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator/encoder/encoder_6/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/normalize/mean"
  op: "Add"
  input: "generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean"
  input: "generator/encoder/encoder_6/batchnorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/normalize/Mul"
  op: "Mul"
  input: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator/encoder/encoder_6/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/normalize/Square"
  op: "Square"
  input: "generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/moments/normalize/variance"
  op: "Sub"
  input: "generator/encoder/encoder_6/batchnorm/moments/normalize/Mul"
  input: "generator/encoder/encoder_6/batchnorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/encoder/encoder_6/batchnorm/moments/normalize/variance"
  input: "generator/encoder/encoder_6/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/encoder/encoder_6/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/encoder/encoder_6/batchnorm/batchnorm/Rsqrt"
  input: "generator/encoder_6/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_6/batchnorm/Identity"
  input: "generator/encoder/encoder_6/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/encoder/encoder_6/batchnorm/moments/normalize/mean"
  input: "generator/encoder/encoder_6/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/encoder_6/batchnorm/offset/read"
  input: "generator/encoder/encoder_6/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/encoder/encoder_6/batchnorm/batchnorm/mul_1"
  input: "generator/encoder/encoder_6/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/encoder/encoder_6/Elu"
  op: "Elu"
  input: "generator/encoder/encoder_6/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0510310381651
      }
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0510310381651
      }
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/decoder_3/conv/filter/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 455
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/decoder_3/conv/filter/Initializer/random_uniform/max"
  input: "generator/decoder_3/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/decoder_3/conv/filter/Initializer/random_uniform/RandomUniform"
  input: "generator/decoder_3/conv/filter/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/Initializer/random_uniform"
  op: "Add"
  input: "generator/decoder_3/conv/filter/Initializer/random_uniform/mul"
  input: "generator/decoder_3/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/Assign"
  op: "Assign"
  input: "generator/decoder_3/conv/filter"
  input: "generator/decoder_3/conv/filter/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/read"
  op: "Identity"
  input: "generator/decoder_3/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/conv/Conv2D"
  op: "Conv2D"
  input: "generator/encoder/encoder_6/Elu"
  input: "generator/decoder_3/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/Identity"
  op: "Identity"
  input: "generator/decoder/decoder_3/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/offset"
  input: "generator/decoder_3/batchnorm/offset/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/read"
  op: "Identity"
  input: "generator/decoder_3/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 471
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/decoder_3/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/scale"
  input: "generator/decoder_3/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/read"
  op: "Identity"
  input: "generator/decoder_3/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/Mean"
  op: "Mean"
  input: "generator/decoder/decoder_3/batchnorm/Identity"
  input: "generator/decoder/decoder_3/batchnorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/decoder/decoder_3/batchnorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 65536.0
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "generator/decoder/decoder_3/batchnorm/Identity"
  input: "generator/decoder/decoder_3/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/decoder/decoder_3/batchnorm/Identity"
  input: "generator/decoder/decoder_3/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub"
  input: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/Reshape"
  op: "Reshape"
  input: "generator/decoder/decoder_3/batchnorm/moments/StopGradient"
  input: "generator/decoder/decoder_3/batchnorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Const"
  input: "^generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "^generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator/decoder/decoder_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/normalize/mean"
  op: "Add"
  input: "generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean"
  input: "generator/decoder/decoder_3/batchnorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/normalize/Mul"
  op: "Mul"
  input: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator/decoder/decoder_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/normalize/Square"
  op: "Square"
  input: "generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/moments/normalize/variance"
  op: "Sub"
  input: "generator/decoder/decoder_3/batchnorm/moments/normalize/Mul"
  input: "generator/decoder/decoder_3/batchnorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/decoder/decoder_3/batchnorm/moments/normalize/variance"
  input: "generator/decoder/decoder_3/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/decoder/decoder_3/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/decoder/decoder_3/batchnorm/batchnorm/Rsqrt"
  input: "generator/decoder_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/decoder/decoder_3/batchnorm/Identity"
  input: "generator/decoder/decoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/decoder/decoder_3/batchnorm/moments/normalize/mean"
  input: "generator/decoder/decoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/decoder_3/batchnorm/offset/read"
  input: "generator/decoder/decoder_3/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/decoder/decoder_3/batchnorm/batchnorm/mul_1"
  input: "generator/decoder/decoder_3/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_3/Elu"
  op: "Elu"
  input: "generator/decoder/decoder_3/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/Gather"
  op: "Gather"
  input: "generator/decoder/decoder_2/Shape"
  input: "generator/decoder/decoder_2/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder/decoder_2/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/mul"
  op: "Mul"
  input: "generator/decoder/decoder_2/Gather"
  input: "generator/decoder/decoder_2/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/upsample/ResizeNearestNeighbor"
  op: "ResizeNearestNeighbor"
  input: "generator/decoder/decoder_3/Elu"
  input: "generator/decoder/decoder_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0510310381651
      }
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0510310381651
      }
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/decoder_2/upsample/filter/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 513
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/decoder_2/upsample/filter/Initializer/random_uniform/max"
  input: "generator/decoder_2/upsample/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/decoder_2/upsample/filter/Initializer/random_uniform/RandomUniform"
  input: "generator/decoder_2/upsample/filter/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/Initializer/random_uniform"
  op: "Add"
  input: "generator/decoder_2/upsample/filter/Initializer/random_uniform/mul"
  input: "generator/decoder_2/upsample/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/Assign"
  op: "Assign"
  input: "generator/decoder_2/upsample/filter"
  input: "generator/decoder_2/upsample/filter/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/read"
  op: "Identity"
  input: "generator/decoder_2/upsample/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/upsample/Conv2D"
  op: "Conv2D"
  input: "generator/decoder/decoder_2/upsample/ResizeNearestNeighbor"
  input: "generator/decoder_2/upsample/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/Identity"
  op: "Identity"
  input: "generator/decoder/decoder_2/upsample/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Assign"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/offset"
  input: "generator/decoder_2/batchnorm/offset/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/read"
  op: "Identity"
  input: "generator/decoder_2/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 529
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/mul"
  input: "generator/decoder_2/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Assign"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/scale"
  input: "generator/decoder_2/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/read"
  op: "Identity"
  input: "generator/decoder_2/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/Mean"
  op: "Mean"
  input: "generator/decoder/decoder_2/batchnorm/Identity"
  input: "generator/decoder/decoder_2/batchnorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "generator/decoder/decoder_2/batchnorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Shape"
  op: "Shape"
  input: "generator/decoder/decoder_2/batchnorm/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Cast"
  op: "Cast"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather"
  op: "Gather"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Cast"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count"
  op: "Prod"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "generator/decoder/decoder_2/batchnorm/Identity"
  input: "generator/decoder/decoder_2/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "generator/decoder/decoder_2/batchnorm/Identity"
  input: "generator/decoder/decoder_2/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/Reshape"
  op: "Reshape"
  input: "generator/decoder/decoder_2/batchnorm/moments/StopGradient"
  input: "generator/decoder/decoder_2/batchnorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count"
  input: "^generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "^generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator/decoder/decoder_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/normalize/mean"
  op: "Add"
  input: "generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean"
  input: "generator/decoder/decoder_2/batchnorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/normalize/Mul"
  op: "Mul"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator/decoder/decoder_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/normalize/Square"
  op: "Square"
  input: "generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/moments/normalize/variance"
  op: "Sub"
  input: "generator/decoder/decoder_2/batchnorm/moments/normalize/Mul"
  input: "generator/decoder/decoder_2/batchnorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/batchnorm/add"
  op: "Add"
  input: "generator/decoder/decoder_2/batchnorm/moments/normalize/variance"
  input: "generator/decoder/decoder_2/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "generator/decoder/decoder_2/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "generator/decoder/decoder_2/batchnorm/batchnorm/Rsqrt"
  input: "generator/decoder_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "generator/decoder/decoder_2/batchnorm/Identity"
  input: "generator/decoder/decoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "generator/decoder/decoder_2/batchnorm/moments/normalize/mean"
  input: "generator/decoder/decoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "generator/decoder_2/batchnorm/offset/read"
  input: "generator/decoder/decoder_2/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "generator/decoder/decoder_2/batchnorm/batchnorm/mul_1"
  input: "generator/decoder/decoder_2/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_2/Elu"
  op: "Elu"
  input: "generator/decoder/decoder_2/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_1/Shape"
  op: "Shape"
  input: "generator/decoder/decoder_2/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator/decoder/decoder_1/Gather/indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_1/Gather"
  op: "Gather"
  input: "generator/decoder/decoder_1/Shape"
  input: "generator/decoder/decoder_1/Gather/indices"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder/decoder_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_1/mul"
  op: "Mul"
  input: "generator/decoder/decoder_1/Gather"
  input: "generator/decoder/decoder_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_1/upsample/ResizeNearestNeighbor"
  op: "ResizeNearestNeighbor"
  input: "generator/decoder/decoder_2/Elu"
  input: "generator/decoder/decoder_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0713376402855
      }
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0713376402855
      }
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "generator/decoder_1/upsample/filter/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 576
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/Initializer/random_uniform/sub"
  op: "Sub"
  input: "generator/decoder_1/upsample/filter/Initializer/random_uniform/max"
  input: "generator/decoder_1/upsample/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/Initializer/random_uniform/mul"
  op: "Mul"
  input: "generator/decoder_1/upsample/filter/Initializer/random_uniform/RandomUniform"
  input: "generator/decoder_1/upsample/filter/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/Initializer/random_uniform"
  op: "Add"
  input: "generator/decoder_1/upsample/filter/Initializer/random_uniform/mul"
  input: "generator/decoder_1/upsample/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/Assign"
  op: "Assign"
  input: "generator/decoder_1/upsample/filter"
  input: "generator/decoder_1/upsample/filter/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/read"
  op: "Identity"
  input: "generator/decoder_1/upsample/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_1/upsample/Conv2D"
  op: "Conv2D"
  input: "generator/decoder/decoder_1/upsample/ResizeNearestNeighbor"
  input: "generator/decoder_1/upsample/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder/decoder_1/Tanh"
  op: "Tanh"
  input: "generator/decoder/decoder_1/upsample/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/decoder_1/Mul"
  op: "Mul"
  input: "generator/decoder/decoder_1/Tanh"
  input: "shuffle_batch:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/Mul"
  op: "Mul"
  input: "generator/decoder/decoder_1/Mul"
  input: "shuffle_batch:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator/decoder/Add"
  op: "Add"
  input: "generator/decoder/Mul"
  input: "shuffle_batch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0997509360313
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0997509360313
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator/layer_1/conv/filter/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 591
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Initializer/random_uniform/sub"
  op: "Sub"
  input: "discriminator/layer_1/conv/filter/Initializer/random_uniform/max"
  input: "discriminator/layer_1/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Initializer/random_uniform/mul"
  op: "Mul"
  input: "discriminator/layer_1/conv/filter/Initializer/random_uniform/RandomUniform"
  input: "discriminator/layer_1/conv/filter/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Initializer/random_uniform"
  op: "Add"
  input: "discriminator/layer_1/conv/filter/Initializer/random_uniform/mul"
  input: "discriminator/layer_1/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Assign"
  op: "Assign"
  input: "discriminator/layer_1/conv/filter"
  input: "discriminator/layer_1/conv/filter/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/read"
  op: "Identity"
  input: "discriminator/layer_1/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/conv/Conv2D"
  op: "Conv2D"
  input: "shuffle_batch:2"
  input: "discriminator/layer_1/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/lrelu/Identity"
  op: "Identity"
  input: "real_discriminator/discriminator/layer_1/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.600000023842
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/lrelu/mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_1/lrelu/mul/x"
  input: "real_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/lrelu/Abs"
  op: "Abs"
  input: "real_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40000000596
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/lrelu/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_1/lrelu/mul_1/x"
  input: "real_discriminator/discriminator/layer_1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_1/lrelu/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_1/lrelu/mul"
  input: "real_discriminator/discriminator/layer_1/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0589255653322
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0589255653322
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator/layer_2/conv/filter/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 609
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Initializer/random_uniform/sub"
  op: "Sub"
  input: "discriminator/layer_2/conv/filter/Initializer/random_uniform/max"
  input: "discriminator/layer_2/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Initializer/random_uniform/mul"
  op: "Mul"
  input: "discriminator/layer_2/conv/filter/Initializer/random_uniform/RandomUniform"
  input: "discriminator/layer_2/conv/filter/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Initializer/random_uniform"
  op: "Add"
  input: "discriminator/layer_2/conv/filter/Initializer/random_uniform/mul"
  input: "discriminator/layer_2/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Assign"
  op: "Assign"
  input: "discriminator/layer_2/conv/filter"
  input: "discriminator/layer_2/conv/filter/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/read"
  op: "Identity"
  input: "discriminator/layer_2/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/conv/Conv2D"
  op: "Conv2D"
  input: "real_discriminator/discriminator/layer_1/lrelu/add"
  input: "discriminator/layer_2/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/Identity"
  op: "Identity"
  input: "real_discriminator/discriminator/layer_2/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Assign"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/offset"
  input: "discriminator/layer_2/batchnorm/offset/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/read"
  op: "Identity"
  input: "discriminator/layer_2/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 625
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/mul"
  input: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Assign"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/scale"
  input: "discriminator/layer_2/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/read"
  op: "Identity"
  input: "discriminator/layer_2/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/Mean"
  op: "Mean"
  input: "real_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 65536.0
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "real_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "real_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/Reshape"
  op: "Reshape"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Const"
  input: "^real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "^real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean"
  op: "Add"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square"
  op: "Square"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance"
  op: "Sub"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  input: "discriminator/layer_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/layer_2/batchnorm/offset/read"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/lrelu/Identity"
  op: "Identity"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.600000023842
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/lrelu/mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/lrelu/mul/x"
  input: "real_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/lrelu/Abs"
  op: "Abs"
  input: "real_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40000000596
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/lrelu/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/lrelu/mul_1/x"
  input: "real_discriminator/discriminator/layer_2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_2/lrelu/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_2/lrelu/mul"
  input: "real_discriminator/discriminator/layer_2/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0416666679084
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0416666679084
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator/layer_3/conv/filter/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 667
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Initializer/random_uniform/sub"
  op: "Sub"
  input: "discriminator/layer_3/conv/filter/Initializer/random_uniform/max"
  input: "discriminator/layer_3/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Initializer/random_uniform/mul"
  op: "Mul"
  input: "discriminator/layer_3/conv/filter/Initializer/random_uniform/RandomUniform"
  input: "discriminator/layer_3/conv/filter/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Initializer/random_uniform"
  op: "Add"
  input: "discriminator/layer_3/conv/filter/Initializer/random_uniform/mul"
  input: "discriminator/layer_3/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Assign"
  op: "Assign"
  input: "discriminator/layer_3/conv/filter"
  input: "discriminator/layer_3/conv/filter/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/read"
  op: "Identity"
  input: "discriminator/layer_3/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/conv/Conv2D"
  op: "Conv2D"
  input: "real_discriminator/discriminator/layer_2/lrelu/add"
  input: "discriminator/layer_3/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/Identity"
  op: "Identity"
  input: "real_discriminator/discriminator/layer_3/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Assign"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/offset"
  input: "discriminator/layer_3/batchnorm/offset/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/read"
  op: "Identity"
  input: "discriminator/layer_3/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 683
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/mul"
  input: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Assign"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/scale"
  input: "discriminator/layer_3/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/read"
  op: "Identity"
  input: "discriminator/layer_3/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/Mean"
  op: "Mean"
  input: "real_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16384.0
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "real_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "real_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/Reshape"
  op: "Reshape"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Const"
  input: "^real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "^real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean"
  op: "Add"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square"
  op: "Square"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance"
  op: "Sub"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  input: "discriminator/layer_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/layer_3/batchnorm/offset/read"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/lrelu/Identity"
  op: "Identity"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.600000023842
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/lrelu/mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/lrelu/mul/x"
  input: "real_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/lrelu/Abs"
  op: "Abs"
  input: "real_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40000000596
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/lrelu/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/lrelu/mul_1/x"
  input: "real_discriminator/discriminator/layer_3/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_3/lrelu/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_3/lrelu/mul"
  input: "real_discriminator/discriminator/layer_3/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0294627826661
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0294627826661
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator/layer_4/conv/filter/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 725
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Initializer/random_uniform/sub"
  op: "Sub"
  input: "discriminator/layer_4/conv/filter/Initializer/random_uniform/max"
  input: "discriminator/layer_4/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Initializer/random_uniform/mul"
  op: "Mul"
  input: "discriminator/layer_4/conv/filter/Initializer/random_uniform/RandomUniform"
  input: "discriminator/layer_4/conv/filter/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Initializer/random_uniform"
  op: "Add"
  input: "discriminator/layer_4/conv/filter/Initializer/random_uniform/mul"
  input: "discriminator/layer_4/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Assign"
  op: "Assign"
  input: "discriminator/layer_4/conv/filter"
  input: "discriminator/layer_4/conv/filter/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/read"
  op: "Identity"
  input: "discriminator/layer_4/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/conv/Conv2D"
  op: "Conv2D"
  input: "real_discriminator/discriminator/layer_3/lrelu/add"
  input: "discriminator/layer_4/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/Identity"
  op: "Identity"
  input: "real_discriminator/discriminator/layer_4/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Assign"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/offset"
  input: "discriminator/layer_4/batchnorm/offset/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/read"
  op: "Identity"
  input: "discriminator/layer_4/batchnorm/offset"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999553
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 741
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/mul"
  op: "Mul"
  input: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/RandomStandardNormal"
  input: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal"
  op: "Add"
  input: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/mul"
  input: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Assign"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/scale"
  input: "discriminator/layer_4/batchnorm/scale/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/read"
  op: "Identity"
  input: "discriminator/layer_4/batchnorm/scale"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/Mean"
  op: "Mean"
  input: "real_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16384.0
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "real_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "real_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/Reshape"
  op: "Reshape"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Const"
  input: "^real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "^real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean"
  op: "Add"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square"
  op: "Square"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance"
  op: "Sub"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  input: "discriminator/layer_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/layer_4/batchnorm/offset/read"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/lrelu/Identity"
  op: "Identity"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.600000023842
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/lrelu/mul"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/lrelu/mul/x"
  input: "real_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/lrelu/Abs"
  op: "Abs"
  input: "real_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40000000596
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/lrelu/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/lrelu/mul_1/x"
  input: "real_discriminator/discriminator/layer_4/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_4/lrelu/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_4/lrelu/mul"
  input: "real_discriminator/discriminator/layer_4/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0360492058098
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0360492058098
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "discriminator/layer_5/conv/filter/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 1860795210
    }
  }
  attr {
    key: "seed2"
    value {
      i: 783
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Initializer/random_uniform/sub"
  op: "Sub"
  input: "discriminator/layer_5/conv/filter/Initializer/random_uniform/max"
  input: "discriminator/layer_5/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Initializer/random_uniform/mul"
  op: "Mul"
  input: "discriminator/layer_5/conv/filter/Initializer/random_uniform/RandomUniform"
  input: "discriminator/layer_5/conv/filter/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Initializer/random_uniform"
  op: "Add"
  input: "discriminator/layer_5/conv/filter/Initializer/random_uniform/mul"
  input: "discriminator/layer_5/conv/filter/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Assign"
  op: "Assign"
  input: "discriminator/layer_5/conv/filter"
  input: "discriminator/layer_5/conv/filter/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/read"
  op: "Identity"
  input: "discriminator/layer_5/conv/filter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_5/conv/Conv2D"
  op: "Conv2D"
  input: "real_discriminator/discriminator/layer_4/lrelu/add"
  input: "discriminator/layer_5/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "real_discriminator/discriminator/layer_5/Sigmoid"
  op: "Sigmoid"
  input: "real_discriminator/discriminator/layer_5/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/conv/Conv2D"
  op: "Conv2D"
  input: "generator/decoder/Add"
  input: "discriminator/layer_1/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/lrelu/Identity"
  op: "Identity"
  input: "fake_discriminator/discriminator/layer_1/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.600000023842
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/lrelu/mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul/x"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/lrelu/Abs"
  op: "Abs"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40000000596
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/lrelu/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul_1/x"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_1/lrelu/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/conv/Conv2D"
  op: "Conv2D"
  input: "fake_discriminator/discriminator/layer_1/lrelu/add"
  input: "discriminator/layer_2/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  op: "Identity"
  input: "fake_discriminator/discriminator/layer_2/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/Mean"
  op: "Mean"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 65536.0
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/Reshape"
  op: "Reshape"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Const"
  input: "^fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "^fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square"
  op: "Square"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  input: "discriminator/layer_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/layer_2/batchnorm/offset/read"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/lrelu/Identity"
  op: "Identity"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.600000023842
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/lrelu/mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul/x"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/lrelu/Abs"
  op: "Abs"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40000000596
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/lrelu/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul_1/x"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_2/lrelu/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/conv/Conv2D"
  op: "Conv2D"
  input: "fake_discriminator/discriminator/layer_2/lrelu/add"
  input: "discriminator/layer_3/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  op: "Identity"
  input: "fake_discriminator/discriminator/layer_3/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/Mean"
  op: "Mean"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16384.0
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/Reshape"
  op: "Reshape"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Const"
  input: "^fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "^fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square"
  op: "Square"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  input: "discriminator/layer_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/layer_3/batchnorm/offset/read"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/lrelu/Identity"
  op: "Identity"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.600000023842
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/lrelu/mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul/x"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/lrelu/Abs"
  op: "Abs"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40000000596
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/lrelu/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul_1/x"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_3/lrelu/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/conv/Conv2D"
  op: "Conv2D"
  input: "fake_discriminator/discriminator/layer_3/lrelu/add"
  input: "discriminator/layer_4/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  op: "Identity"
  input: "fake_discriminator/discriminator/layer_4/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/Mean"
  op: "Mean"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  op: "StopGradient"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 16384.0
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference"
  op: "SquaredDifference"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss"
  op: "Sum"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss"
  op: "Sum"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/Reshape"
  op: "Reshape"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/divisor"
  op: "Reciprocal"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Const"
  input: "^fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "^fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square"
  op: "Square"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999974738e-06
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  input: "discriminator/layer_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub"
  op: "Sub"
  input: "discriminator/layer_4/batchnorm/offset/read"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/lrelu/Identity"
  op: "Identity"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/lrelu/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.600000023842
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/lrelu/mul"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul/x"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/lrelu/Abs"
  op: "Abs"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/lrelu/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.40000000596
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/lrelu/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul_1/x"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_4/lrelu/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_5/conv/Conv2D"
  op: "Conv2D"
  input: "fake_discriminator/discriminator/layer_4/lrelu/add"
  input: "discriminator/layer_5/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "fake_discriminator/discriminator/layer_5/Sigmoid"
  op: "Sigmoid"
  input: "fake_discriminator/discriminator/layer_5/conv/Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "discriminator_loss/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_5/Sigmoid"
  input: "discriminator_loss/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/Log"
  op: "Log"
  input: "discriminator_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_loss/sub"
  op: "Sub"
  input: "discriminator_loss/sub/x"
  input: "fake_discriminator/discriminator/layer_5/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "discriminator_loss/add_1"
  op: "Add"
  input: "discriminator_loss/sub"
  input: "discriminator_loss/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/Log_1"
  op: "Log"
  input: "discriminator_loss/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/add_2"
  op: "Add"
  input: "discriminator_loss/Log"
  input: "discriminator_loss/Log_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/Neg"
  op: "Neg"
  input: "discriminator_loss/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_loss/Mean"
  op: "Mean"
  input: "discriminator_loss/Neg"
  input: "discriminator_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_loss/Equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_loss/Equal"
  op: "Equal"
  input: "shuffle_batch:3"
  input: "generator_loss/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\000\003\000"
      }
    }
  }
}
node {
  name: "generator_loss/Reshape"
  op: "Reshape"
  input: "generator_loss/Equal"
  input: "generator_loss/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 196608
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\000\003\000"
      }
    }
  }
}
node {
  name: "generator_loss/Reshape_1"
  op: "Reshape"
  input: "generator/decoder/Add"
  input: "generator_loss/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 196608
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\000\000\003\000"
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "generator_loss/boolean_mask/Shape"
  input: "generator_loss/boolean_mask/strided_slice/stack"
  input: "generator_loss/boolean_mask/strided_slice/stack_1"
  input: "generator_loss/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_loss/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/Prod"
  op: "Prod"
  input: "generator_loss/boolean_mask/strided_slice"
  input: "generator_loss/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_loss/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\000\000\003\000"
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "generator_loss/boolean_mask/Shape_1"
  input: "generator_loss/boolean_mask/strided_slice_1/stack"
  input: "generator_loss/boolean_mask/strided_slice_1/stack_1"
  input: "generator_loss/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_loss/boolean_mask/concat/values_0"
  op: "Pack"
  input: "generator_loss/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_loss/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/concat"
  op: "ConcatV2"
  input: "generator_loss/boolean_mask/concat/values_0"
  input: "generator_loss/boolean_mask/strided_slice_1"
  input: "generator_loss/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/Reshape"
  op: "Reshape"
  input: "generator_loss/Reshape_1"
  input: "generator_loss/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3145728
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "generator_loss/Reshape"
  input: "generator_loss/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3145728
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/Where"
  op: "Where"
  input: "generator_loss/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "generator_loss/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask/Gather"
  op: "Gather"
  input: "generator_loss/boolean_mask/Reshape"
  input: "generator_loss/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "generator_loss/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "generator_loss/Reshape_2"
  op: "Reshape"
  input: "generator_loss/boolean_mask/Gather"
  input: "generator_loss/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000\000\003\000"
      }
    }
  }
}
node {
  name: "generator_loss/Reshape_3"
  op: "Reshape"
  input: "shuffle_batch:2"
  input: "generator_loss/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 196608
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\000\000\003\000"
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/strided_slice"
  op: "StridedSlice"
  input: "generator_loss/boolean_mask_1/Shape"
  input: "generator_loss/boolean_mask_1/strided_slice/stack"
  input: "generator_loss/boolean_mask_1/strided_slice/stack_1"
  input: "generator_loss/boolean_mask_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/Prod"
  op: "Prod"
  input: "generator_loss/boolean_mask_1/strided_slice"
  input: "generator_loss/boolean_mask_1/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\000\000\003\000"
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/strided_slice_1"
  op: "StridedSlice"
  input: "generator_loss/boolean_mask_1/Shape_1"
  input: "generator_loss/boolean_mask_1/strided_slice_1/stack"
  input: "generator_loss/boolean_mask_1/strided_slice_1/stack_1"
  input: "generator_loss/boolean_mask_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/concat/values_0"
  op: "Pack"
  input: "generator_loss/boolean_mask_1/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/concat"
  op: "ConcatV2"
  input: "generator_loss/boolean_mask_1/concat/values_0"
  input: "generator_loss/boolean_mask_1/strided_slice_1"
  input: "generator_loss/boolean_mask_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/Reshape"
  op: "Reshape"
  input: "generator_loss/Reshape_3"
  input: "generator_loss/boolean_mask_1/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3145728
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/Reshape_1"
  op: "Reshape"
  input: "generator_loss/Reshape"
  input: "generator_loss/boolean_mask_1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3145728
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/Where"
  op: "Where"
  input: "generator_loss/boolean_mask_1/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/Squeeze"
  op: "Squeeze"
  input: "generator_loss/boolean_mask_1/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "generator_loss/boolean_mask_1/Gather"
  op: "Gather"
  input: "generator_loss/boolean_mask_1/Reshape"
  input: "generator_loss/boolean_mask_1/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "generator_loss/Reshape_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "generator_loss/Reshape_4"
  op: "Reshape"
  input: "generator_loss/boolean_mask_1/Gather"
  input: "generator_loss/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/ones_like/Shape"
  op: "Shape"
  input: "generator_loss/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_loss/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_loss/ones_like"
  op: "Fill"
  input: "generator_loss/ones_like/Shape"
  input: "generator_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/sub"
  op: "Sub"
  input: "generator_loss/Reshape_4"
  input: "generator_loss/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/Abs"
  op: "Abs"
  input: "generator_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/mul"
  op: "Mul"
  input: "generator_loss/Abs"
  input: "generator_loss/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_loss/Mean"
  op: "Mean"
  input: "generator_loss/mul"
  input: "generator_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_loss/mul_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_loss/mul_1"
  op: "Mul"
  input: "generator_loss/mul_1/x"
  input: "generator_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_loss/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_loss/add"
  op: "Add"
  input: "generator_loss/add/x"
  input: "generator_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_loss/mul_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "generator_loss/mul_2"
  op: "Mul"
  input: "generator_loss/mul_2/x"
  input: "generator_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_loss/add_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_loss/add_1"
  op: "Add"
  input: "generator_loss/add_1/x"
  input: "generator_loss/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_loss/generator_gan_loss/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999996004e-13
      }
    }
  }
}
node {
  name: "generator_loss/generator_gan_loss/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_5/Sigmoid"
  input: "generator_loss/generator_gan_loss/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/generator_gan_loss/Log"
  op: "Log"
  input: "generator_loss/generator_gan_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/generator_gan_loss/Neg"
  op: "Neg"
  input: "generator_loss/generator_gan_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_loss/generator_gan_loss/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_loss/generator_gan_loss/Mean"
  op: "Mean"
  input: "generator_loss/generator_gan_loss/Neg"
  input: "generator_loss/generator_gan_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_loss/generator_gan_loss/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000475
      }
    }
  }
}
node {
  name: "generator_loss/generator_gan_loss/mul"
  op: "Mul"
  input: "generator_loss/generator_gan_loss/Mean"
  input: "generator_loss/generator_gan_loss/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_loss/generator_gan_loss/add_1"
  op: "Add"
  input: "generator_loss/add_1"
  input: "generator_loss/generator_gan_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/Shape"
  input: "discriminator_train/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/Fill"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Reshape"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Prod"
  op: "Prod"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Shape"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Prod_1"
  op: "Prod"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Shape_1"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Prod_1"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Prod"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/Cast"
  op: "Cast"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Tile"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Neg_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/discriminator_loss/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/discriminator_loss/add_2_grad/Shape"
  input: "discriminator_train/gradients/discriminator_loss/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_2_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_loss/Neg_grad/Neg"
  input: "discriminator_train/gradients/discriminator_loss/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_2_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_loss/add_2_grad/Sum"
  input: "discriminator_train/gradients/discriminator_loss/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_2_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_loss/Neg_grad/Neg"
  input: "discriminator_train/gradients/discriminator_loss/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_loss/add_2_grad/Sum_1"
  input: "discriminator_train/gradients/discriminator_loss/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/discriminator_loss/add_2_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_loss/add_2_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/add_2_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/add_2_grad/Reshape_1"
  input: "^discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "discriminator_loss/add"
  input: "^discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Log_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_loss/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Log_1_grad/Reciprocal"
  op: "Reciprocal"
  input: "discriminator_loss/add_1"
  input: "^discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/Log_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_loss/add_2_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/discriminator_loss/Log_1_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Shape"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_loss/Log_grad/mul"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Sum"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_loss/Log_grad/mul"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Sum_1"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/discriminator_loss/add_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_loss/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/discriminator_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Shape"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_loss/Log_1_grad/mul"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Sum"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_loss/Log_1_grad/mul"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Sum_1"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/discriminator_loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "real_discriminator/discriminator/layer_5/Sigmoid"
  input: "discriminator_train/gradients/discriminator_loss/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Shape"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Sum"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_loss/add_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Neg"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/discriminator_loss/sub_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_loss/sub_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/Reshape_1"
  input: "^discriminator_train/gradients/discriminator_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_loss/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_5/conv/filter/read"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "real_discriminator/discriminator/layer_4/lrelu/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Shape_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "fake_discriminator/discriminator/layer_5/Sigmoid"
  input: "discriminator_train/gradients/discriminator_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_5/conv/filter/read"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_4/lrelu/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Shape_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/lrelu/mul/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_4/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/lrelu/mul_1/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "real_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul_1/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_1"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_2"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_2"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_2"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_3"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_3"
  input: "discriminator/layer_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_4"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "real_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_5"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_5"
  input: "discriminator/layer_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_6"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_7"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_7"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "discriminator_train/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "real_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_8"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_8"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "discriminator_train/gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_9"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_10"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_11"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_4/conv/filter/read"
  input: "discriminator_train/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "real_discriminator/discriminator/layer_3/lrelu/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Shape_1"
  input: "discriminator_train/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_12"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_4/conv/filter/read"
  input: "discriminator_train/gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_3/lrelu/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Shape_1"
  input: "discriminator_train/gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/lrelu/mul/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_3/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/lrelu/mul_1/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_13"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "real_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul_1/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_14"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_14"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_14"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_15"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_15"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_15"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_16"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_16"
  input: "discriminator/layer_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_17"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "real_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_18"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_18"
  input: "discriminator/layer_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_19"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_20"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_20"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "discriminator_train/gradients/AddN_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "real_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_21"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_21"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "discriminator_train/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_22"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_23"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_24"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_3/conv/filter/read"
  input: "discriminator_train/gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "real_discriminator/discriminator/layer_2/lrelu/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Shape_1"
  input: "discriminator_train/gradients/AddN_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_25"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_3/conv/filter/read"
  input: "discriminator_train/gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_2/lrelu/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Shape_1"
  input: "discriminator_train/gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/lrelu/mul/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/lrelu/mul_1/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_26"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "real_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul_1/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_27"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_27"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_27"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_28"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_28"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/AddN_28"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_29"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_29"
  input: "discriminator/layer_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/AddN_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_30"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "real_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_31"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_31"
  input: "discriminator/layer_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_32"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_33"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_33"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "discriminator_train/gradients/AddN_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "real_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_34"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/AddN_34"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "discriminator_train/gradients/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_35"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_36"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_37"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_2/conv/filter/read"
  input: "discriminator_train/gradients/AddN_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "real_discriminator/discriminator/layer_1/lrelu/add"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Shape_1"
  input: "discriminator_train/gradients/AddN_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_38"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_2/conv/filter/read"
  input: "discriminator_train/gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_1/lrelu/add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Shape_1"
  input: "discriminator_train/gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  input: "real_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_1/lrelu/mul/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  input: "real_discriminator/discriminator/layer_1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "real_discriminator/discriminator/layer_1/lrelu/mul_1/x"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/mul_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_39"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "real_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul_1/x"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/mul_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_40"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_1/conv/filter/read"
  input: "discriminator_train/gradients/AddN_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "shuffle_batch:2"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Shape_1"
  input: "discriminator_train/gradients/AddN_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_41"
  op: "AddN"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_1/conv/filter/read"
  input: "discriminator_train/gradients/AddN_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/decoder/Add"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Shape_1"
  input: "discriminator_train/gradients/AddN_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_42"
  op: "AddN"
  input: "discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/real_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator_train/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_train/beta1_power/Assign"
  op: "Assign"
  input: "discriminator_train/beta1_power"
  input: "discriminator_train/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/beta1_power/read"
  op: "Identity"
  input: "discriminator_train/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "discriminator_train/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_train/beta2_power/Assign"
  op: "Assign"
  input: "discriminator_train/beta2_power"
  input: "discriminator_train/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/beta2_power/read"
  op: "Identity"
  input: "discriminator_train/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_1/conv/filter/Adam"
  input: "discriminator_train/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam/read"
  op: "Identity"
  input: "discriminator/layer_1/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_1/conv/filter/Adam_1"
  input: "discriminator_train/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_1/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_2/conv/filter/Adam"
  input: "discriminator_train/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam/read"
  op: "Identity"
  input: "discriminator/layer_2/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_2/conv/filter/Adam_1"
  input: "discriminator_train/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_2/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/offset/Adam"
  input: "discriminator_train/zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "discriminator/layer_2/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/offset/Adam_1"
  input: "discriminator_train/zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_2/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/scale/Adam"
  input: "discriminator_train/zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "discriminator/layer_2/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/scale/Adam_1"
  input: "discriminator_train/zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_2/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_3/conv/filter/Adam"
  input: "discriminator_train/zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam/read"
  op: "Identity"
  input: "discriminator/layer_3/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_3/conv/filter/Adam_1"
  input: "discriminator_train/zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_3/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/offset/Adam"
  input: "discriminator_train/zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "discriminator/layer_3/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/offset/Adam_1"
  input: "discriminator_train/zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_3/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/scale/Adam"
  input: "discriminator_train/zeros_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "discriminator/layer_3/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/scale/Adam_1"
  input: "discriminator_train/zeros_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_3/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_4/conv/filter/Adam"
  input: "discriminator_train/zeros_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam/read"
  op: "Identity"
  input: "discriminator/layer_4/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_4/conv/filter/Adam_1"
  input: "discriminator_train/zeros_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_4/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/offset/Adam"
  input: "discriminator_train/zeros_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "discriminator/layer_4/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/offset/Adam_1"
  input: "discriminator_train/zeros_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_4/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/scale/Adam"
  input: "discriminator_train/zeros_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "discriminator/layer_4/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/scale/Adam_1"
  input: "discriminator_train/zeros_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_4/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam/Assign"
  op: "Assign"
  input: "discriminator/layer_5/conv/filter/Adam"
  input: "discriminator_train/zeros_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam/read"
  op: "Identity"
  input: "discriminator/layer_5/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/zeros_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "discriminator/layer_5/conv/filter/Adam_1"
  input: "discriminator_train/zeros_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/Adam_1/read"
  op: "Identity"
  input: "discriminator/layer_5/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000199999994948
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_1/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_1/conv/filter"
  input: "discriminator/layer_1/conv/filter/Adam"
  input: "discriminator/layer_1/conv/filter/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_2/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_2/conv/filter"
  input: "discriminator/layer_2/conv/filter/Adam"
  input: "discriminator/layer_2/conv/filter/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_2/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_2/batchnorm/offset"
  input: "discriminator/layer_2/batchnorm/offset/Adam"
  input: "discriminator/layer_2/batchnorm/offset/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_2/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_2/batchnorm/scale"
  input: "discriminator/layer_2/batchnorm/scale/Adam"
  input: "discriminator/layer_2/batchnorm/scale/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_3/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_3/conv/filter"
  input: "discriminator/layer_3/conv/filter/Adam"
  input: "discriminator/layer_3/conv/filter/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_3/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_3/batchnorm/offset"
  input: "discriminator/layer_3/batchnorm/offset/Adam"
  input: "discriminator/layer_3/batchnorm/offset/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_3/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_3/batchnorm/scale"
  input: "discriminator/layer_3/batchnorm/scale/Adam"
  input: "discriminator/layer_3/batchnorm/scale/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_4/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_4/conv/filter"
  input: "discriminator/layer_4/conv/filter/Adam"
  input: "discriminator/layer_4/conv/filter/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_4/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_4/batchnorm/offset"
  input: "discriminator/layer_4/batchnorm/offset/Adam"
  input: "discriminator/layer_4/batchnorm/offset/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_4/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_4/batchnorm/scale"
  input: "discriminator/layer_4/batchnorm/scale/Adam"
  input: "discriminator/layer_4/batchnorm/scale/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_discriminator/layer_5/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "discriminator/layer_5/conv/filter"
  input: "discriminator/layer_5/conv/filter/Adam"
  input: "discriminator/layer_5/conv/filter/Adam_1"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/mul"
  op: "Mul"
  input: "discriminator_train/beta1_power/read"
  input: "discriminator_train/Adam/beta1"
  input: "^discriminator_train/Adam/update_discriminator/layer_1/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_5/conv/filter/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/Assign"
  op: "Assign"
  input: "discriminator_train/beta1_power"
  input: "discriminator_train/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/Adam/mul_1"
  op: "Mul"
  input: "discriminator_train/beta2_power/read"
  input: "discriminator_train/Adam/beta2"
  input: "^discriminator_train/Adam/update_discriminator/layer_1/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_5/conv/filter/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/Assign_1"
  op: "Assign"
  input: "discriminator_train/beta2_power"
  input: "discriminator_train/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/Adam"
  op: "NoOp"
  input: "^discriminator_train/Adam/update_discriminator/layer_1/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_2/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_3/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/batchnorm/offset/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_4/batchnorm/scale/ApplyAdam"
  input: "^discriminator_train/Adam/update_discriminator/layer_5/conv/filter/ApplyAdam"
  input: "^discriminator_train/Adam/Assign"
  input: "^discriminator_train/Adam/Assign_1"
}
node {
  name: "generator_train/gradients/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/Fill"
  op: "Fill"
  input: "generator_train/gradients/Shape"
  input: "generator_train/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Shape"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/Fill"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Sum"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/Fill"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator_loss/add_1_grad/Shape"
  input: "generator_train/gradients/generator_loss/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator_loss/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/add_1_grad/Sum"
  input: "generator_train/gradients/generator_loss/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator_loss/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator_loss/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator_loss/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator_loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Shape"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/tuple/control_dependency_1"
  input: "generator_loss/generator_gan_loss/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/mul"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Sum"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/mul_1"
  op: "Mul"
  input: "generator_loss/generator_gan_loss/Mean"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/mul_1"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Sum_1"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_2_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_2_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator_loss/mul_2_grad/Shape"
  input: "generator_train/gradients/generator_loss/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_2_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator_loss/add_1_grad/tuple/control_dependency_1"
  input: "generator_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_2_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/mul_2_grad/mul"
  input: "generator_train/gradients/generator_loss/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_2_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/mul_2_grad/Sum"
  input: "generator_train/gradients/generator_loss/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_2_grad/mul_1"
  op: "Mul"
  input: "generator_loss/mul_2/x"
  input: "generator_train/gradients/generator_loss/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_2_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/mul_2_grad/mul_1"
  input: "generator_train/gradients/generator_loss/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/mul_2_grad/Sum_1"
  input: "generator_train/gradients/generator_loss/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/mul_2_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator_loss/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/mul_2_grad/Reshape_1"
  input: "^generator_train/gradients/generator_loss/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Tile/multiples"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Reshape"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Prod"
  op: "Prod"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Shape"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Const_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Prod_1"
  op: "Prod"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Shape_1"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Prod_1"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Prod"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Cast"
  op: "Cast"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Tile"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator_loss/add_grad/Shape"
  input: "generator_train/gradients/generator_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/mul_2_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator_loss/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/add_grad/Sum"
  input: "generator_train/gradients/generator_loss/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/mul_2_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator_loss/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/add_grad/Sum_1"
  input: "generator_train/gradients/generator_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/add_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/add_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Neg_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator_loss/mul_1_grad/Shape"
  input: "generator_train/gradients/generator_loss/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator_loss/add_grad/tuple/control_dependency_1"
  input: "generator_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/mul_1_grad/mul"
  input: "generator_train/gradients/generator_loss/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/mul_1_grad/Sum"
  input: "generator_train/gradients/generator_loss/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/mul_1"
  op: "Mul"
  input: "generator_loss/mul_1/x"
  input: "generator_train/gradients/generator_loss/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/mul_1_grad/mul_1"
  input: "generator_train/gradients/generator_loss/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator_loss/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator_loss/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "generator_loss/generator_gan_loss/add"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/generator_gan_loss/Neg_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/Log_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Neg_grad/Neg"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator_loss/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Shape"
  op: "Shape"
  input: "generator_loss/mul"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator_loss/Mean_grad/Reshape"
  input: "generator_train/gradients/generator_loss/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Shape_1"
  op: "Shape"
  input: "generator_loss/mul"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Shape_2"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Prod"
  op: "Prod"
  input: "generator_train/gradients/generator_loss/Mean_grad/Shape_1"
  input: "generator_train/gradients/generator_loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Const_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Prod_1"
  op: "Prod"
  input: "generator_train/gradients/generator_loss/Mean_grad/Shape_2"
  input: "generator_train/gradients/generator_loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator_loss/Mean_grad/Prod_1"
  input: "generator_train/gradients/generator_loss/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator_loss/Mean_grad/Prod"
  input: "generator_train/gradients/generator_loss/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/Cast"
  op: "Cast"
  input: "generator_train/gradients/generator_loss/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "generator_train/gradients/generator_loss/Mean_grad/Tile"
  input: "generator_train/gradients/generator_loss/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Shape"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Log_grad/mul"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Sum"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/Log_grad/mul"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Sum_1"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/generator_gan_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator_loss/generator_gan_loss/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/generator_gan_loss/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/Shape"
  op: "Shape"
  input: "generator_loss/Abs"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "generator_loss/ones_like"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator_loss/mul_grad/Shape"
  input: "generator_train/gradients/generator_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator_loss/Mean_grad/truediv"
  input: "generator_loss/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/mul_grad/mul"
  input: "generator_train/gradients/generator_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/mul_grad/Sum"
  input: "generator_train/gradients/generator_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/mul_1"
  op: "Mul"
  input: "generator_loss/Abs"
  input: "generator_train/gradients/generator_loss/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/mul_grad/mul_1"
  input: "generator_train/gradients/generator_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/mul_grad/Sum_1"
  input: "generator_train/gradients/generator_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/mul_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/mul_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "fake_discriminator/discriminator/layer_5/Sigmoid"
  input: "generator_train/gradients/generator_loss/generator_gan_loss/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Abs_grad/Sign"
  op: "Sign"
  input: "generator_loss/sub"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator_loss/mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator_loss/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/ones_like_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/ones_like_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator_loss/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_5/conv/filter/read"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_4/lrelu/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Shape_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/Shape"
  op: "Shape"
  input: "generator_loss/Reshape_4"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "generator_loss/Reshape_2"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator_loss/sub_grad/Shape"
  input: "generator_train/gradients/generator_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/Abs_grad/mul"
  input: "generator_train/gradients/generator_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/sub_grad/Sum"
  input: "generator_train/gradients/generator_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator_loss/Abs_grad/mul"
  input: "generator_train/gradients/generator_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/sub_grad/Neg"
  input: "generator_train/gradients/generator_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator_loss/sub_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/sub_grad/Reshape"
  input: "^generator_train/gradients/generator_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_loss/sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_5/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Reshape_2_grad/Shape"
  op: "Shape"
  input: "generator_loss/boolean_mask/Gather"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/sub_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator_loss/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/lrelu/mul_1/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/boolean_mask/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3145728
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/Size"
  op: "Size"
  input: "generator_loss/boolean_mask/Squeeze"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/ExpandDims/dim"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/ExpandDims"
  op: "ExpandDims"
  input: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/Size"
  input: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/strided_slice/stack"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/strided_slice/stack_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/strided_slice/stack_2"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/strided_slice"
  op: "StridedSlice"
  input: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/Shape"
  input: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/strided_slice/stack"
  input: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/strided_slice/stack_1"
  input: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/concat/axis"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/concat"
  op: "ConcatV2"
  input: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/ExpandDims"
  input: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/strided_slice"
  input: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/Reshape_2_grad/Reshape"
  input: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/Reshape_1"
  op: "Reshape"
  input: "generator_loss/boolean_mask/Squeeze"
  input: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_4/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Reshape_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\000\000\003\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Reshape_grad/Reshape/strided_slice/stack"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Reshape_grad/Reshape/strided_slice/stack_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Reshape_grad/Reshape/strided_slice/stack_2"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Reshape_grad/Reshape/strided_slice"
  op: "StridedSlice"
  input: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/Shape"
  input: "generator_train/gradients/generator_loss/boolean_mask/Reshape_grad/Reshape/strided_slice/stack"
  input: "generator_train/gradients/generator_loss/boolean_mask/Reshape_grad/Reshape/strided_slice/stack_1"
  input: "generator_train/gradients/generator_loss/boolean_mask/Reshape_grad/Reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Reshape_grad/Reshape/tensor"
  op: "UnsortedSegmentSum"
  input: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/Reshape"
  input: "generator_train/gradients/generator_loss/boolean_mask/Gather_grad/Reshape_1"
  input: "generator_train/gradients/generator_loss/boolean_mask/Reshape_grad/Reshape/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/boolean_mask/Reshape_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/boolean_mask/Reshape_grad/Reshape/tensor"
  input: "generator_train/gradients/generator_loss/boolean_mask/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 196608
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Reshape_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_loss/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_loss/boolean_mask/Reshape_grad/Reshape"
  input: "generator_train/gradients/generator_loss/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_1"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_1"
  input: "discriminator/layer_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_2"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_2"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator_train/gradients/AddN_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_3"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_4"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_4/conv/filter/read"
  input: "generator_train/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_3/lrelu/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Shape_1"
  input: "generator_train/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_4/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/lrelu/mul_1/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_3/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_5"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/AddN_5"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/AddN_5"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_6"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_6"
  input: "discriminator/layer_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_7"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_7"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator_train/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000 \000\000\000 \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_8"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_9"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_3/conv/filter/read"
  input: "generator_train/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_2/lrelu/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Shape_1"
  input: "generator_train/gradients/AddN_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_3/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/lrelu/mul_1/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_2/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_10"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/AddN_10"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/AddN_10"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_11"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_11"
  input: "discriminator/layer_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_12"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_12"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator_train/gradients/AddN_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/Identity"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_13"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_14"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_2/conv/filter/read"
  input: "generator_train/gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "fake_discriminator/discriminator/layer_1/lrelu/add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Shape_1"
  input: "generator_train/gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_2/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/mul_1"
  op: "Mul"
  input: "fake_discriminator/discriminator/layer_1/lrelu/mul_1/x"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/mul_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Sum_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/Sign"
  op: "Sign"
  input: "fake_discriminator/discriminator/layer_1/lrelu/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_15"
  op: "AddN"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/Abs_grad/mul"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/lrelu/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Shape"
  input: "discriminator/layer_1/conv/filter/read"
  input: "generator_train/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/decoder/Add"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Shape_1"
  input: "generator_train/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_16"
  op: "AddN"
  input: "generator_train/gradients/generator_loss/Reshape_1_grad/Reshape"
  input: "generator_train/gradients/fake_discriminator/discriminator/layer_1/conv/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_loss/Reshape_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/Add_grad/Shape"
  input: "generator_train/gradients/generator/decoder/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/AddN_16"
  input: "generator_train/gradients/generator/decoder/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/Add_grad/Sum"
  input: "generator_train/gradients/generator/decoder/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/AddN_16"
  input: "generator_train/gradients/generator/decoder/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/Add_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/Add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/Add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/Add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/Add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/Add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/Add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/Mul_grad/Shape"
  input: "generator_train/gradients/generator/decoder/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/Add_grad/tuple/control_dependency"
  input: "shuffle_batch:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/Mul_grad/mul"
  input: "generator_train/gradients/generator/decoder/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/Mul_grad/Sum"
  input: "generator_train/gradients/generator/decoder/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Mul_grad/mul_1"
  op: "Mul"
  input: "generator/decoder/decoder_1/Mul"
  input: "generator_train/gradients/generator/decoder/Add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/Mul_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/Mul_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/Mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/Mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Shape"
  op: "Shape"
  input: "generator/decoder/decoder_1/Tanh"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/Mul_grad/tuple/control_dependency"
  input: "shuffle_batch:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/mul"
  input: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/mul_1"
  op: "Mul"
  input: "generator/decoder/decoder_1/Tanh"
  input: "generator_train/gradients/generator/decoder/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_1/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "generator/decoder/decoder_1/Tanh"
  input: "generator_train/gradients/generator/decoder/decoder_1/Mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/Shape"
  op: "Shape"
  input: "generator/decoder/decoder_1/upsample/ResizeNearestNeighbor"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/Shape"
  input: "generator/decoder_1/upsample/filter/read"
  input: "generator_train/gradients/generator/decoder/decoder_1/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/decoder/decoder_1/upsample/ResizeNearestNeighbor"
  input: "generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder/decoder_1/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/upsample/ResizeNearestNeighbor_grad/Shape"
  op: "Shape"
  input: "generator/decoder/decoder_2/Elu"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/upsample/ResizeNearestNeighbor_grad/strided_slice/stack"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/upsample/ResizeNearestNeighbor_grad/strided_slice/stack_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/upsample/ResizeNearestNeighbor_grad/strided_slice/stack_2"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/upsample/ResizeNearestNeighbor_grad/strided_slice"
  op: "StridedSlice"
  input: "generator_train/gradients/generator/decoder/decoder_1/upsample/ResizeNearestNeighbor_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_1/upsample/ResizeNearestNeighbor_grad/strided_slice/stack"
  input: "generator_train/gradients/generator/decoder/decoder_1/upsample/ResizeNearestNeighbor_grad/strided_slice/stack_1"
  input: "generator_train/gradients/generator/decoder/decoder_1/upsample/ResizeNearestNeighbor_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_1/upsample/ResizeNearestNeighbor_grad/ResizeNearestNeighborGrad"
  op: "ResizeNearestNeighborGrad"
  input: "generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_1/upsample/ResizeNearestNeighbor_grad/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "generator_train/gradients/generator/decoder/decoder_1/upsample/ResizeNearestNeighbor_grad/ResizeNearestNeighborGrad"
  input: "generator/decoder/decoder_2/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Shape"
  input: "generator/decoder/decoder_2/batchnorm/batchnorm/mul_1"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Shape"
  input: "generator/decoder/decoder_2/batchnorm/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/decoder/decoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "generator/decoder/decoder_2/batchnorm/Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Neg"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder/decoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "generator/decoder/decoder_2/batchnorm/moments/normalize/mean"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_17"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_17"
  input: "generator/decoder_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "generator/decoder/decoder_2/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/decoder/decoder_2/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Neg"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "generator/decoder/decoder_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Shape"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_18"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_18"
  input: "generator/decoder/decoder_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator_train/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Shape"
  input: "generator/decoder/decoder_2/batchnorm/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/decoder/decoder_2/batchnorm/Identity"
  input: "generator/decoder/decoder_2/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Shape"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_19"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/divisor_grad/ReciprocalGrad"
  op: "ReciprocalGrad"
  input: "generator/decoder/decoder_2/batchnorm/moments/normalize/divisor"
  input: "generator_train/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Shape"
  input: "generator/decoder/decoder_2/batchnorm/Identity"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape"
  op: "Reshape"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Const"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/add"
  op: "Add"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Const"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/add"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/range/start"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Size"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/range"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/mod"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/normalize/divisor_grad/ReciprocalGrad"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Rank"
  op: "Const"
  input: "^discriminator_train/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/range_1/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/range_1/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/range_1"
  op: "Range"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/range_1/start"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Rank"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/range_1/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/ListDiff"
  op: "ListDiff"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/range_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/concat/axis"
  op: "Const"
  input: "^discriminator_train/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/concat"
  op: "ConcatV2"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/ListDiff"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Gather"
  op: "Gather"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Const"
  op: "Const"
  input: "^discriminator_train/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Prod"
  op: "Prod"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Gather"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Gather_1"
  op: "Gather"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/ListDiff"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Const_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Prod_1"
  op: "Prod"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Gather_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/transpose"
  op: "Transpose"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Shape_2"
  op: "Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  op: "Pack"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Prod"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape_2"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/transpose"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Cumprod"
  op: "Cumprod"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Cumprod/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  op: "Cumprod"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape_2"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Cumprod_1/axis"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "exclusive"
    value {
      b: true
    }
  }
  attr {
    key: "reverse"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Cumprod"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Cumprod_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape_3"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/transpose_1"
  op: "Transpose"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape_3"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Tile"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape_4"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_20"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/Reshape_grad/Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  op: "ExpandDims"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/Size"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  op: "StridedSlice"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_1"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/concat"
  op: "ConcatV2"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/strided_slice"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/count_grad/Reshape_4"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/Reshape_1"
  op: "Reshape"
  input: "generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather/indices"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Gather_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_21"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/Shape"
  op: "Shape"
  input: "generator/decoder/decoder_2/upsample/ResizeNearestNeighbor"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/Shape"
  input: "generator/decoder_2/upsample/filter/read"
  input: "generator_train/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/decoder/decoder_2/upsample/ResizeNearestNeighbor"
  input: "generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/Shape_1"
  input: "generator_train/gradients/AddN_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/upsample/ResizeNearestNeighbor_grad/ResizeNearestNeighborGrad/size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_2/upsample/ResizeNearestNeighbor_grad/ResizeNearestNeighborGrad"
  op: "ResizeNearestNeighborGrad"
  input: "generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_2/upsample/ResizeNearestNeighbor_grad/ResizeNearestNeighborGrad/size"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "align_corners"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "generator_train/gradients/generator/decoder/decoder_2/upsample/ResizeNearestNeighbor_grad/ResizeNearestNeighborGrad"
  input: "generator/decoder/decoder_3/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/decoder/decoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/mul"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "generator/decoder/decoder_3/batchnorm/Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Neg"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/decoder/decoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/mul"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "generator/decoder/decoder_3/batchnorm/moments/normalize/mean"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_22"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_22"
  input: "generator/decoder_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/mul"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "generator/decoder/decoder_3/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/AddN_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/decoder/decoder_3/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Neg"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "generator/decoder/decoder_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/mul"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_23"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_23"
  input: "generator/decoder/decoder_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator_train/gradients/AddN_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/decoder/decoder_3/batchnorm/Identity"
  input: "generator/decoder/decoder_3/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_24"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/Reshape_grad/Reshape"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_25"
  op: "AddN"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/Shape"
  input: "generator/decoder_3/conv/filter/read"
  input: "generator_train/gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/encoder/encoder_6/Elu"
  input: "generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/Shape_1"
  input: "generator_train/gradients/AddN_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_6/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_6/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_6/batchnorm/Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder/encoder_6/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_6/batchnorm/moments/normalize/mean"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_26"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_26"
  input: "generator/encoder_6/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_6/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/encoder/encoder_6/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_6/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_27"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_27"
  input: "generator/encoder/encoder_6/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator_train/gradients/AddN_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/encoder/encoder_6/batchnorm/Identity"
  input: "generator/encoder/encoder_6/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_28"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/Reshape_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_29"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "generator_train/gradients/AddN_29"
  input: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/BatchToSpaceND/block_shape"
  input: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 4
          }
          dim {
            size: 4
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\020\000\000\006\000\000\000\006\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/Shape"
  input: "generator/encoder_6/dilated_conv/filter/read"
  input: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/SpaceToBatchND"
  input: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4096
          }
          dim {
            size: 6
          }
          dim {
            size: 6
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/SpaceToBatchND/block_shape"
  input: "generator/encoder/encoder_6/dilated_conv/atrous_conv2d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "generator/encoder/encoder_5/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_5/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_5/batchnorm/Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder/encoder_5/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_5/batchnorm/moments/normalize/mean"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_30"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_30"
  input: "generator/encoder_5/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_5/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/encoder/encoder_5/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_5/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_31"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_31"
  input: "generator/encoder/encoder_5/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator_train/gradients/AddN_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/encoder/encoder_5/batchnorm/Identity"
  input: "generator/encoder/encoder_5/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_32"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/Reshape_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_33"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "generator_train/gradients/AddN_33"
  input: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/BatchToSpaceND/block_shape"
  input: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 8
          }
          dim {
            size: 8
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\004\000\000\n\000\000\000\n\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/Shape"
  input: "generator/encoder_5/dilated_conv/filter/read"
  input: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/SpaceToBatchND"
  input: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/SpaceToBatchND/block_shape"
  input: "generator/encoder/encoder_5/dilated_conv/atrous_conv2d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "generator/encoder/encoder_4/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_4/batchnorm/Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder/encoder_4/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_4/batchnorm/moments/normalize/mean"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_34"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_34"
  input: "generator/encoder_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_4/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/AddN_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/encoder/encoder_4/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_4/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_35"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_35"
  input: "generator/encoder/encoder_4/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator_train/gradients/AddN_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/encoder/encoder_4/batchnorm/Identity"
  input: "generator/encoder/encoder_4/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_36"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/Reshape_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_37"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "generator_train/gradients/AddN_37"
  input: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/BatchToSpaceND/block_shape"
  input: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\001\000\000\022\000\000\000\022\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/Shape"
  input: "generator/encoder_4/dilated_conv/filter/read"
  input: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 18
          }
          dim {
            size: 18
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/SpaceToBatchND"
  input: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 18
          }
          dim {
            size: 18
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/SpaceToBatchND/block_shape"
  input: "generator/encoder/encoder_4/dilated_conv/atrous_conv2d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "generator/encoder/encoder_3/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_3/batchnorm/Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder/encoder_3/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_3/batchnorm/moments/normalize/mean"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_38"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_38"
  input: "generator/encoder_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_3/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/AddN_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/encoder/encoder_3/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_39"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_39"
  input: "generator/encoder/encoder_3/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator_train/gradients/AddN_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/encoder/encoder_3/batchnorm/Identity"
  input: "generator/encoder/encoder_3/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_40"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/Reshape_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_41"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d/BatchToSpaceND_grad/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "generator_train/gradients/AddN_41"
  input: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/BatchToSpaceND/block_shape"
  input: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "@\000\000\000\"\000\000\000\"\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/Shape"
  input: "generator/encoder_3/dilated_conv/filter/read"
  input: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/SpaceToBatchND"
  input: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d/BatchToSpaceND_grad/SpaceToBatchND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 64
          }
          dim {
            size: 34
          }
          dim {
            size: 34
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d/SpaceToBatchND_grad/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/SpaceToBatchND/block_shape"
  input: "generator/encoder/encoder_3/dilated_conv/atrous_conv2d/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d/SpaceToBatchND_grad/BatchToSpaceND"
  input: "generator/encoder/encoder_2/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_2/batchnorm/Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder/encoder_2/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_2/batchnorm/moments/normalize/mean"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_42"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_42"
  input: "generator/encoder_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_2/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/AddN_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/encoder/encoder_2/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_43"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_43"
  input: "generator/encoder/encoder_2/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator_train/gradients/AddN_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/encoder/encoder_2/batchnorm/Identity"
  input: "generator/encoder/encoder_2/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000@\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_44"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/Reshape_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_45"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 64
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/Shape"
  input: "generator/encoder_2/conv/filter/read"
  input: "generator_train/gradients/AddN_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "generator/encoder/encoder_1/Elu"
  input: "generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/Shape_1"
  input: "generator_train/gradients/AddN_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/Elu_grad/EluGrad"
  op: "EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_1/Elu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/Elu_grad/EluGrad"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_1/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_1/batchnorm/Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  input: "generator/encoder/encoder_1/batchnorm/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_1/batchnorm/moments/normalize/mean"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_46"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_2_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_46"
  input: "generator/encoder_1/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_1/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/AddN_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/Reshape_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/Reshape_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  op: "RsqrtGrad"
  input: "generator/encoder/encoder_1/batchnorm/batchnorm/Rsqrt"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/Rsqrt_grad/RsqrtGrad"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/add_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  input: "generator/encoder/encoder_1/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Square_grad/mul/x"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Square_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Square_grad/mul/x"
  input: "generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Square_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/variance_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  op: "Add"
  input: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss/reduction_indices"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/add"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/range/start"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Size"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/range"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/mod"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_47"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/Square_grad/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/AddN_47"
  input: "generator/encoder/encoder_1/batchnorm/moments/normalize/divisor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  op: "Mul"
  input: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss"
  input: "generator_train/gradients/AddN_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  op: "Const"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/scalar"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  op: "Sub"
  input: "generator/encoder/encoder_1/batchnorm/Identity"
  input: "generator/encoder/encoder_1/batchnorm/moments/StopGradient"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/var_ss_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/mul_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Sum_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  op: "Add"
  input: "generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss/reduction_indices"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  op: "FloorMod"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/add"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  op: "Range"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/start"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Size"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  op: "Fill"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/range"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/mod"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  op: "Maximum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  op: "FloorDiv"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/normalize/shifted_mean_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\200\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/mean_ss_grad/Tile"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Neg"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
  input: "^generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_48"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/Reshape_grad/Reshape"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/AddN_49"
  op: "AddN"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/SquaredDifference_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/moments/sufficient_statistics/Sub_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/Shape"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/Shape"
  input: "generator/encoder_1/conv/filter/read"
  input: "generator_train/gradients/AddN_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "shuffle_batch:1"
  input: "generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/Shape_1"
  input: "generator_train/gradients/AddN_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "generator_train/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_train/beta1_power/Assign"
  op: "Assign"
  input: "generator_train/beta1_power"
  input: "generator_train/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/beta1_power/read"
  op: "Identity"
  input: "generator_train/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "generator_train/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_train/beta2_power/Assign"
  op: "Assign"
  input: "generator_train/beta2_power"
  input: "generator_train/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/beta2_power/read"
  op: "Identity"
  input: "generator_train/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_1/conv/filter/Adam"
  input: "generator_train/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam/read"
  op: "Identity"
  input: "generator/encoder_1/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_1/conv/filter/Adam_1"
  input: "generator_train/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_1/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_1/batchnorm/offset/Adam"
  input: "generator_train/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/encoder_1/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_1/batchnorm/offset/Adam_1"
  input: "generator_train/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_1/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_1/batchnorm/scale/Adam"
  input: "generator_train/zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/encoder_1/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_1/batchnorm/scale/Adam_1"
  input: "generator_train/zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_1/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_2/conv/filter/Adam"
  input: "generator_train/zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam/read"
  op: "Identity"
  input: "generator/encoder_2/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_2/conv/filter/Adam_1"
  input: "generator_train/zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_2/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/offset/Adam"
  input: "generator_train/zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/encoder_2/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/offset/Adam_1"
  input: "generator_train/zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_2/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/scale/Adam"
  input: "generator_train/zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/encoder_2/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/scale/Adam_1"
  input: "generator_train/zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_2/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_3/dilated_conv/filter/Adam"
  input: "generator_train/zeros_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/Adam/read"
  op: "Identity"
  input: "generator/encoder_3/dilated_conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_3/dilated_conv/filter/Adam_1"
  input: "generator_train/zeros_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_3/dilated_conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/offset/Adam"
  input: "generator_train/zeros_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/encoder_3/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/offset/Adam_1"
  input: "generator_train/zeros_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_3/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/scale/Adam"
  input: "generator_train/zeros_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/encoder_3/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/scale/Adam_1"
  input: "generator_train/zeros_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_3/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_4/dilated_conv/filter/Adam"
  input: "generator_train/zeros_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/Adam/read"
  op: "Identity"
  input: "generator/encoder_4/dilated_conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_4/dilated_conv/filter/Adam_1"
  input: "generator_train/zeros_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_4/dilated_conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/offset/Adam"
  input: "generator_train/zeros_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/encoder_4/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/offset/Adam_1"
  input: "generator_train/zeros_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_4/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/scale/Adam"
  input: "generator_train/zeros_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/encoder_4/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/scale/Adam_1"
  input: "generator_train/zeros_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_4/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_5/dilated_conv/filter/Adam"
  input: "generator_train/zeros_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/Adam/read"
  op: "Identity"
  input: "generator/encoder_5/dilated_conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_5/dilated_conv/filter/Adam_1"
  input: "generator_train/zeros_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_5/dilated_conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/offset/Adam"
  input: "generator_train/zeros_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/encoder_5/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/offset/Adam_1"
  input: "generator_train/zeros_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_5/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/scale/Adam"
  input: "generator_train/zeros_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/encoder_5/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/scale/Adam_1"
  input: "generator_train/zeros_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_5/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_6/dilated_conv/filter/Adam"
  input: "generator_train/zeros_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/Adam/read"
  op: "Identity"
  input: "generator/encoder_6/dilated_conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_6/dilated_conv/filter/Adam_1"
  input: "generator_train/zeros_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_6/dilated_conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/offset/Adam"
  input: "generator_train/zeros_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/encoder_6/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/offset/Adam_1"
  input: "generator_train/zeros_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_6/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/scale/Adam"
  input: "generator_train/zeros_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/encoder_6/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/scale/Adam_1"
  input: "generator_train/zeros_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/encoder_6/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_36"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_3/conv/filter/Adam"
  input: "generator_train/zeros_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/Adam/read"
  op: "Identity"
  input: "generator/decoder_3/conv/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_37"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_3/conv/filter/Adam_1"
  input: "generator_train/zeros_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_3/conv/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_38"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/offset/Adam"
  input: "generator_train/zeros_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/decoder_3/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_39"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/offset/Adam_1"
  input: "generator_train/zeros_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_3/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_40"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/scale/Adam"
  input: "generator_train/zeros_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/decoder_3/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_41"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/scale/Adam_1"
  input: "generator_train/zeros_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_3/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_42"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_2/upsample/filter/Adam"
  input: "generator_train/zeros_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/Adam/read"
  op: "Identity"
  input: "generator/decoder_2/upsample/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_43"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_2/upsample/filter/Adam_1"
  input: "generator_train/zeros_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_2/upsample/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_44"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/offset/Adam"
  input: "generator_train/zeros_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Adam/read"
  op: "Identity"
  input: "generator/decoder_2/batchnorm/offset/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_45"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/offset/Adam_1"
  input: "generator_train/zeros_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_2/batchnorm/offset/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_46"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/scale/Adam"
  input: "generator_train/zeros_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Adam/read"
  op: "Identity"
  input: "generator/decoder_2/batchnorm/scale/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_47"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/scale/Adam_1"
  input: "generator_train/zeros_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_2/batchnorm/scale/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_48"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/Adam/Assign"
  op: "Assign"
  input: "generator/decoder_1/upsample/filter/Adam"
  input: "generator_train/zeros_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/Adam/read"
  op: "Identity"
  input: "generator/decoder_1/upsample/filter/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/zeros_49"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 3
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/Adam_1/Assign"
  op: "Assign"
  input: "generator/decoder_1/upsample/filter/Adam_1"
  input: "generator_train/zeros_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/Adam_1/read"
  op: "Identity"
  input: "generator/decoder_1/upsample/filter/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/Adam/learning_rate"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000199999994948
      }
    }
  }
}
node {
  name: "generator_train/Adam/beta1"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "generator_train/Adam/beta2"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "generator_train/Adam/epsilon"
  op: "Const"
  input: "^discriminator_train/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_1/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_1/conv/filter"
  input: "generator/encoder_1/conv/filter/Adam"
  input: "generator/encoder_1/conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_1/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_1/batchnorm/offset"
  input: "generator/encoder_1/batchnorm/offset/Adam"
  input: "generator/encoder_1/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_1/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_1/batchnorm/scale"
  input: "generator/encoder_1/batchnorm/scale/Adam"
  input: "generator/encoder_1/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_2/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_2/conv/filter"
  input: "generator/encoder_2/conv/filter/Adam"
  input: "generator/encoder_2/conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_2/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_2/batchnorm/offset"
  input: "generator/encoder_2/batchnorm/offset/Adam"
  input: "generator/encoder_2/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_2/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_2/batchnorm/scale"
  input: "generator/encoder_2/batchnorm/scale/Adam"
  input: "generator/encoder_2/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_3/dilated_conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_3/dilated_conv/filter"
  input: "generator/encoder_3/dilated_conv/filter/Adam"
  input: "generator/encoder_3/dilated_conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_3/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_3/batchnorm/offset"
  input: "generator/encoder_3/batchnorm/offset/Adam"
  input: "generator/encoder_3/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_3/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_3/batchnorm/scale"
  input: "generator/encoder_3/batchnorm/scale/Adam"
  input: "generator/encoder_3/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_4/dilated_conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_4/dilated_conv/filter"
  input: "generator/encoder_4/dilated_conv/filter/Adam"
  input: "generator/encoder_4/dilated_conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_4/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_4/batchnorm/offset"
  input: "generator/encoder_4/batchnorm/offset/Adam"
  input: "generator/encoder_4/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_4/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_4/batchnorm/scale"
  input: "generator/encoder_4/batchnorm/scale/Adam"
  input: "generator/encoder_4/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_5/dilated_conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_5/dilated_conv/filter"
  input: "generator/encoder_5/dilated_conv/filter/Adam"
  input: "generator/encoder_5/dilated_conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_5/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_5/batchnorm/offset"
  input: "generator/encoder_5/batchnorm/offset/Adam"
  input: "generator/encoder_5/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_5/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_5/batchnorm/scale"
  input: "generator/encoder_5/batchnorm/scale/Adam"
  input: "generator/encoder_5/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_6/dilated_conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_6/dilated_conv/filter"
  input: "generator/encoder_6/dilated_conv/filter/Adam"
  input: "generator/encoder_6/dilated_conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_6/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_6/batchnorm/offset"
  input: "generator/encoder_6/batchnorm/offset/Adam"
  input: "generator/encoder_6/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/encoder_6/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/encoder_6/batchnorm/scale"
  input: "generator/encoder_6/batchnorm/scale/Adam"
  input: "generator/encoder_6/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_3/conv/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_3/conv/filter"
  input: "generator/decoder_3/conv/filter/Adam"
  input: "generator/decoder_3/conv/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_3/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_3/batchnorm/offset"
  input: "generator/decoder_3/batchnorm/offset/Adam"
  input: "generator/decoder_3/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_3/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_3/batchnorm/scale"
  input: "generator/decoder_3/batchnorm/scale/Adam"
  input: "generator/decoder_3/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_2/upsample/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_2/upsample/filter"
  input: "generator/decoder_2/upsample/filter/Adam"
  input: "generator/decoder_2/upsample/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_2/batchnorm/offset/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_2/batchnorm/offset"
  input: "generator/decoder_2/batchnorm/offset/Adam"
  input: "generator/decoder_2/batchnorm/offset/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_2/batchnorm/scale/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_2/batchnorm/scale"
  input: "generator/decoder_2/batchnorm/scale/Adam"
  input: "generator/decoder_2/batchnorm/scale/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_generator/decoder_1/upsample/filter/ApplyAdam"
  op: "ApplyAdam"
  input: "generator/decoder_1/upsample/filter"
  input: "generator/decoder_1/upsample/filter/Adam"
  input: "generator/decoder_1/upsample/filter/Adam_1"
  input: "generator_train/beta1_power/read"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/mul"
  op: "Mul"
  input: "generator_train/beta1_power/read"
  input: "generator_train/Adam/beta1"
  input: "^generator_train/Adam/update_generator/encoder_1/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_1/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_1/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/dilated_conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/dilated_conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/dilated_conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/dilated_conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/upsample/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_1/upsample/filter/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/Adam/Assign"
  op: "Assign"
  input: "generator_train/beta1_power"
  input: "generator_train/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/Adam/mul_1"
  op: "Mul"
  input: "generator_train/beta2_power/read"
  input: "generator_train/Adam/beta2"
  input: "^generator_train/Adam/update_generator/encoder_1/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_1/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_1/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/dilated_conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/dilated_conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/dilated_conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/dilated_conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/upsample/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_1/upsample/filter/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/Adam/Assign_1"
  op: "Assign"
  input: "generator_train/beta2_power"
  input: "generator_train/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/Adam"
  op: "NoOp"
  input: "^discriminator_train/Adam"
  input: "^generator_train/Adam/update_generator/encoder_1/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_1/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_1/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_2/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/dilated_conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_3/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/dilated_conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_4/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/dilated_conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_5/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/dilated_conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/encoder_6/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/conv/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_3/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/upsample/filter/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/batchnorm/offset/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_2/batchnorm/scale/ApplyAdam"
  input: "^generator_train/Adam/update_generator/decoder_1/upsample/filter/ApplyAdam"
  input: "^generator_train/Adam/Assign"
  input: "^generator_train/Adam/Assign_1"
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_loss/add/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_loss/add/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "generator_loss/add/ExponentialMovingAverage"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/add/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_loss/add/ExponentialMovingAverage/read"
  op: "Identity"
  input: "generator_loss/add/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/add/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_loss/Mean/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "discriminator_loss/Mean/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "discriminator_loss/Mean/ExponentialMovingAverage"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_loss/Mean/ExponentialMovingAverage/read"
  op: "Identity"
  input: "discriminator_loss/Mean/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage/Assign"
  op: "Assign"
  input: "generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage/read"
  op: "Identity"
  input: "generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/decay"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.990000009537
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/add/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg/sub/x"
  input: "ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/add/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "generator_loss/add/ExponentialMovingAverage/read"
  input: "generator_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/add/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/add/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg"
  op: "AssignSub"
  input: "generator_loss/add/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/add/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_1/sub/x"
  input: "ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1/sub_1"
  op: "Sub"
  input: "discriminator_loss/Mean/ExponentialMovingAverage/read"
  input: "discriminator_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_1/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_1"
  op: "AssignSub"
  input: "discriminator_loss/Mean/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2/sub"
  op: "Sub"
  input: "ExponentialMovingAverage/AssignMovingAvg_2/sub/x"
  input: "ExponentialMovingAverage/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2/sub_1"
  op: "Sub"
  input: "generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage/read"
  input: "generator_loss/generator_gan_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2/mul"
  op: "Mul"
  input: "ExponentialMovingAverage/AssignMovingAvg_2/sub_1"
  input: "ExponentialMovingAverage/AssignMovingAvg_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialMovingAverage/AssignMovingAvg_2"
  op: "AssignSub"
  input: "generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
  input: "ExponentialMovingAverage/AssignMovingAvg_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "ExponentialMovingAverage"
  op: "NoOp"
  input: "^ExponentialMovingAverage/AssignMovingAvg"
  input: "^ExponentialMovingAverage/AssignMovingAvg_1"
  input: "^ExponentialMovingAverage/AssignMovingAvg_2"
}
node {
  name: "global_step/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "global_step/read"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "global_step"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^ExponentialMovingAverage"
  input: "^Assign"
  input: "^generator_train/Adam"
}
node {
  name: "images_summary/deprocess_input/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "images_summary/deprocess_input/add"
  op: "Add"
  input: "shuffle_batch:1"
  input: "images_summary/deprocess_input/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "images_summary/deprocess_input/div/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "images_summary/deprocess_input/div"
  op: "RealDiv"
  input: "images_summary/deprocess_input/add"
  input: "images_summary/deprocess_input/div/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "images_summary/deprocess_input/convert_image/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.5
      }
    }
  }
}
node {
  name: "images_summary/deprocess_input/convert_image/Mul"
  op: "Mul"
  input: "images_summary/deprocess_input/div"
  input: "images_summary/deprocess_input/convert_image/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "images_summary/deprocess_input/convert_image/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "images_summary/deprocess_input/convert_image/Maximum"
  op: "Maximum"
  input: "images_summary/deprocess_input/convert_image/Mul"
  input: "images_summary/deprocess_input/convert_image/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "images_summary/deprocess_input/convert_image/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "images_summary/deprocess_input/convert_image/Minimum"
  op: "Minimum"
  input: "images_summary/deprocess_input/convert_image/Maximum"
  input: "images_summary/deprocess_input/convert_image/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "images_summary/deprocess_input/convert_image"
  op: "Cast"
  input: "images_summary/deprocess_input/convert_image/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "images_summary/images/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "images_summary/images"
      }
    }
  }
}
node {
  name: "images_summary/images"
  op: "ImageSummary"
  input: "images_summary/images/tag"
  input: "images_summary/deprocess_input/convert_image"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "targets_summary/deprocess_output/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "targets_summary/deprocess_output/add"
  op: "Add"
  input: "shuffle_batch:2"
  input: "targets_summary/deprocess_output/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "targets_summary/deprocess_output/div/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "targets_summary/deprocess_output/div"
  op: "RealDiv"
  input: "targets_summary/deprocess_output/add"
  input: "targets_summary/deprocess_output/div/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "targets_summary/deprocess_output/convert_image/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.5
      }
    }
  }
}
node {
  name: "targets_summary/deprocess_output/convert_image/Mul"
  op: "Mul"
  input: "targets_summary/deprocess_output/div"
  input: "targets_summary/deprocess_output/convert_image/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "targets_summary/deprocess_output/convert_image/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "targets_summary/deprocess_output/convert_image/Maximum"
  op: "Maximum"
  input: "targets_summary/deprocess_output/convert_image/Mul"
  input: "targets_summary/deprocess_output/convert_image/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "targets_summary/deprocess_output/convert_image/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "targets_summary/deprocess_output/convert_image/Minimum"
  op: "Minimum"
  input: "targets_summary/deprocess_output/convert_image/Maximum"
  input: "targets_summary/deprocess_output/convert_image/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "targets_summary/deprocess_output/convert_image"
  op: "Cast"
  input: "targets_summary/deprocess_output/convert_image/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "targets_summary/targets/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "targets_summary/targets"
      }
    }
  }
}
node {
  name: "targets_summary/targets"
  op: "ImageSummary"
  input: "targets_summary/targets/tag"
  input: "targets_summary/deprocess_output/convert_image"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "outputs_summary/deprocess_output/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "outputs_summary/deprocess_output/add"
  op: "Add"
  input: "generator/decoder/Add"
  input: "outputs_summary/deprocess_output/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "outputs_summary/deprocess_output/div/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "outputs_summary/deprocess_output/div"
  op: "RealDiv"
  input: "outputs_summary/deprocess_output/add"
  input: "outputs_summary/deprocess_output/div/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "outputs_summary/deprocess_output/convert_image/Mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.5
      }
    }
  }
}
node {
  name: "outputs_summary/deprocess_output/convert_image/Mul"
  op: "Mul"
  input: "outputs_summary/deprocess_output/div"
  input: "outputs_summary/deprocess_output/convert_image/Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "outputs_summary/deprocess_output/convert_image/min"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "outputs_summary/deprocess_output/convert_image/Maximum"
  op: "Maximum"
  input: "outputs_summary/deprocess_output/convert_image/Mul"
  input: "outputs_summary/deprocess_output/convert_image/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "outputs_summary/deprocess_output/convert_image/max"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 255.0
      }
    }
  }
}
node {
  name: "outputs_summary/deprocess_output/convert_image/Minimum"
  op: "Minimum"
  input: "outputs_summary/deprocess_output/convert_image/Maximum"
  input: "outputs_summary/deprocess_output/convert_image/max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "outputs_summary/deprocess_output/convert_image"
  op: "Cast"
  input: "outputs_summary/deprocess_output/convert_image/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "outputs_summary/outputs/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "outputs_summary/outputs"
      }
    }
  }
}
node {
  name: "outputs_summary/outputs"
  op: "ImageSummary"
  input: "outputs_summary/outputs/tag"
  input: "outputs_summary/deprocess_output/convert_image"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "bad_color"
    value {
      tensor {
        dtype: DT_UINT8
        tensor_shape {
          dim {
            size: 4
          }
        }
        int_val: 255
        int_val: 0
        int_val: 0
        int_val: 255
      }
    }
  }
  attr {
    key: "max_images"
    value {
      i: 3
    }
  }
}
node {
  name: "encode_images/input_pngs/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/strided_slice"
  op: "StridedSlice"
  input: "encode_images/input_pngs/Shape"
  input: "encode_images/input_pngs/strided_slice/stack"
  input: "encode_images/input_pngs/strided_slice/stack_1"
  input: "encode_images/input_pngs/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArray"
  op: "TensorArrayV3"
  input: "encode_images/input_pngs/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "encode_images/input_pngs/TensorArrayUnstack/Shape"
  input: "encode_images/input_pngs/TensorArrayUnstack/strided_slice/stack"
  input: "encode_images/input_pngs/TensorArrayUnstack/strided_slice/stack_1"
  input: "encode_images/input_pngs/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/range"
  op: "Range"
  input: "encode_images/input_pngs/TensorArrayUnstack/range/start"
  input: "encode_images/input_pngs/TensorArrayUnstack/strided_slice"
  input: "encode_images/input_pngs/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "encode_images/input_pngs/TensorArray"
  input: "encode_images/input_pngs/TensorArrayUnstack/range"
  input: "images_summary/deprocess_input/convert_image"
  input: "encode_images/input_pngs/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArray_1"
  op: "TensorArrayV3"
  input: "encode_images/input_pngs/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Enter"
  op: "Enter"
  input: "encode_images/input_pngs/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/input_pngs/while/encode_images/input_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Enter_1"
  op: "Enter"
  input: "encode_images/input_pngs/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/input_pngs/while/encode_images/input_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Merge"
  op: "Merge"
  input: "encode_images/input_pngs/while/Enter"
  input: "encode_images/input_pngs/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Merge_1"
  op: "Merge"
  input: "encode_images/input_pngs/while/Enter_1"
  input: "encode_images/input_pngs/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Less/Enter"
  op: "Enter"
  input: "encode_images/input_pngs/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/input_pngs/while/encode_images/input_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Less"
  op: "Less"
  input: "encode_images/input_pngs/while/Merge"
  input: "encode_images/input_pngs/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/LoopCond"
  op: "LoopCond"
  input: "encode_images/input_pngs/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Switch"
  op: "Switch"
  input: "encode_images/input_pngs/while/Merge"
  input: "encode_images/input_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Switch_1"
  op: "Switch"
  input: "encode_images/input_pngs/while/Merge_1"
  input: "encode_images/input_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Identity"
  op: "Identity"
  input: "encode_images/input_pngs/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Identity_1"
  op: "Identity"
  input: "encode_images/input_pngs/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "encode_images/input_pngs/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/input_pngs/while/encode_images/input_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/input_pngs/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "encode_images/input_pngs/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/input_pngs/while/encode_images/input_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/input_pngs/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "encode_images/input_pngs/while/TensorArrayReadV3/Enter"
  input: "encode_images/input_pngs/while/Identity"
  input: "encode_images/input_pngs/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "encode_images/input_pngs/while/EncodePng"
  op: "EncodePng"
  input: "encode_images/input_pngs/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression"
    value {
      i: -1
    }
  }
}
node {
  name: "encode_images/input_pngs/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "encode_images/input_pngs/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/input_pngs/while/encode_images/input_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/input_pngs/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "encode_images/input_pngs/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "encode_images/input_pngs/while/Identity"
  input: "encode_images/input_pngs/while/EncodePng"
  input: "encode_images/input_pngs/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/add/y"
  op: "Const"
  input: "^encode_images/input_pngs/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/add"
  op: "Add"
  input: "encode_images/input_pngs/while/Identity"
  input: "encode_images/input_pngs/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/NextIteration"
  op: "NextIteration"
  input: "encode_images/input_pngs/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/NextIteration_1"
  op: "NextIteration"
  input: "encode_images/input_pngs/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Exit"
  op: "Exit"
  input: "encode_images/input_pngs/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/while/Exit_1"
  op: "Exit"
  input: "encode_images/input_pngs/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "encode_images/input_pngs/TensorArray_1"
  input: "encode_images/input_pngs/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayStack/range"
  op: "Range"
  input: "encode_images/input_pngs/TensorArrayStack/range/start"
  input: "encode_images/input_pngs/TensorArrayStack/TensorArraySizeV3"
  input: "encode_images/input_pngs/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encode_images/input_pngs/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "encode_images/input_pngs/TensorArray_1"
  input: "encode_images/input_pngs/TensorArrayStack/range"
  input: "encode_images/input_pngs/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/input_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/strided_slice"
  op: "StridedSlice"
  input: "encode_images/target_pngs/Shape"
  input: "encode_images/target_pngs/strided_slice/stack"
  input: "encode_images/target_pngs/strided_slice/stack_1"
  input: "encode_images/target_pngs/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArray"
  op: "TensorArrayV3"
  input: "encode_images/target_pngs/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "encode_images/target_pngs/TensorArrayUnstack/Shape"
  input: "encode_images/target_pngs/TensorArrayUnstack/strided_slice/stack"
  input: "encode_images/target_pngs/TensorArrayUnstack/strided_slice/stack_1"
  input: "encode_images/target_pngs/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/range"
  op: "Range"
  input: "encode_images/target_pngs/TensorArrayUnstack/range/start"
  input: "encode_images/target_pngs/TensorArrayUnstack/strided_slice"
  input: "encode_images/target_pngs/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "encode_images/target_pngs/TensorArray"
  input: "encode_images/target_pngs/TensorArrayUnstack/range"
  input: "targets_summary/deprocess_output/convert_image"
  input: "encode_images/target_pngs/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArray_1"
  op: "TensorArrayV3"
  input: "encode_images/target_pngs/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Enter"
  op: "Enter"
  input: "encode_images/target_pngs/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/target_pngs/while/encode_images/target_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Enter_1"
  op: "Enter"
  input: "encode_images/target_pngs/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/target_pngs/while/encode_images/target_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Merge"
  op: "Merge"
  input: "encode_images/target_pngs/while/Enter"
  input: "encode_images/target_pngs/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Merge_1"
  op: "Merge"
  input: "encode_images/target_pngs/while/Enter_1"
  input: "encode_images/target_pngs/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Less/Enter"
  op: "Enter"
  input: "encode_images/target_pngs/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/target_pngs/while/encode_images/target_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Less"
  op: "Less"
  input: "encode_images/target_pngs/while/Merge"
  input: "encode_images/target_pngs/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/LoopCond"
  op: "LoopCond"
  input: "encode_images/target_pngs/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Switch"
  op: "Switch"
  input: "encode_images/target_pngs/while/Merge"
  input: "encode_images/target_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Switch_1"
  op: "Switch"
  input: "encode_images/target_pngs/while/Merge_1"
  input: "encode_images/target_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Identity"
  op: "Identity"
  input: "encode_images/target_pngs/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Identity_1"
  op: "Identity"
  input: "encode_images/target_pngs/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "encode_images/target_pngs/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/target_pngs/while/encode_images/target_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/target_pngs/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "encode_images/target_pngs/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/target_pngs/while/encode_images/target_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/target_pngs/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "encode_images/target_pngs/while/TensorArrayReadV3/Enter"
  input: "encode_images/target_pngs/while/Identity"
  input: "encode_images/target_pngs/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "encode_images/target_pngs/while/EncodePng"
  op: "EncodePng"
  input: "encode_images/target_pngs/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression"
    value {
      i: -1
    }
  }
}
node {
  name: "encode_images/target_pngs/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "encode_images/target_pngs/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/target_pngs/while/encode_images/target_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/target_pngs/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "encode_images/target_pngs/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "encode_images/target_pngs/while/Identity"
  input: "encode_images/target_pngs/while/EncodePng"
  input: "encode_images/target_pngs/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/add/y"
  op: "Const"
  input: "^encode_images/target_pngs/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/add"
  op: "Add"
  input: "encode_images/target_pngs/while/Identity"
  input: "encode_images/target_pngs/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/NextIteration"
  op: "NextIteration"
  input: "encode_images/target_pngs/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/NextIteration_1"
  op: "NextIteration"
  input: "encode_images/target_pngs/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Exit"
  op: "Exit"
  input: "encode_images/target_pngs/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/while/Exit_1"
  op: "Exit"
  input: "encode_images/target_pngs/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "encode_images/target_pngs/TensorArray_1"
  input: "encode_images/target_pngs/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayStack/range"
  op: "Range"
  input: "encode_images/target_pngs/TensorArrayStack/range/start"
  input: "encode_images/target_pngs/TensorArrayStack/TensorArraySizeV3"
  input: "encode_images/target_pngs/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encode_images/target_pngs/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "encode_images/target_pngs/TensorArray_1"
  input: "encode_images/target_pngs/TensorArrayStack/range"
  input: "encode_images/target_pngs/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/target_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/strided_slice"
  op: "StridedSlice"
  input: "encode_images/output_pngs/Shape"
  input: "encode_images/output_pngs/strided_slice/stack"
  input: "encode_images/output_pngs/strided_slice/stack_1"
  input: "encode_images/output_pngs/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArray"
  op: "TensorArrayV3"
  input: "encode_images/output_pngs/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\020\000\000\000\000\001\000\000\000\001\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "encode_images/output_pngs/TensorArrayUnstack/Shape"
  input: "encode_images/output_pngs/TensorArrayUnstack/strided_slice/stack"
  input: "encode_images/output_pngs/TensorArrayUnstack/strided_slice/stack_1"
  input: "encode_images/output_pngs/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/range"
  op: "Range"
  input: "encode_images/output_pngs/TensorArrayUnstack/range/start"
  input: "encode_images/output_pngs/TensorArrayUnstack/strided_slice"
  input: "encode_images/output_pngs/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "encode_images/output_pngs/TensorArray"
  input: "encode_images/output_pngs/TensorArrayUnstack/range"
  input: "outputs_summary/deprocess_output/convert_image"
  input: "encode_images/output_pngs/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArray_1"
  op: "TensorArrayV3"
  input: "encode_images/output_pngs/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Enter"
  op: "Enter"
  input: "encode_images/output_pngs/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/output_pngs/while/encode_images/output_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Enter_1"
  op: "Enter"
  input: "encode_images/output_pngs/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/output_pngs/while/encode_images/output_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Merge"
  op: "Merge"
  input: "encode_images/output_pngs/while/Enter"
  input: "encode_images/output_pngs/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Merge_1"
  op: "Merge"
  input: "encode_images/output_pngs/while/Enter_1"
  input: "encode_images/output_pngs/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Less/Enter"
  op: "Enter"
  input: "encode_images/output_pngs/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/output_pngs/while/encode_images/output_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Less"
  op: "Less"
  input: "encode_images/output_pngs/while/Merge"
  input: "encode_images/output_pngs/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/LoopCond"
  op: "LoopCond"
  input: "encode_images/output_pngs/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Switch"
  op: "Switch"
  input: "encode_images/output_pngs/while/Merge"
  input: "encode_images/output_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Switch_1"
  op: "Switch"
  input: "encode_images/output_pngs/while/Merge_1"
  input: "encode_images/output_pngs/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Identity"
  op: "Identity"
  input: "encode_images/output_pngs/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Identity_1"
  op: "Identity"
  input: "encode_images/output_pngs/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "encode_images/output_pngs/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/output_pngs/while/encode_images/output_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/output_pngs/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "encode_images/output_pngs/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/output_pngs/while/encode_images/output_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/output_pngs/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "encode_images/output_pngs/while/TensorArrayReadV3/Enter"
  input: "encode_images/output_pngs/while/Identity"
  input: "encode_images/output_pngs/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "encode_images/output_pngs/while/EncodePng"
  op: "EncodePng"
  input: "encode_images/output_pngs/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression"
    value {
      i: -1
    }
  }
}
node {
  name: "encode_images/output_pngs/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "encode_images/output_pngs/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "encode_images/output_pngs/while/encode_images/output_pngs/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 10
    }
  }
}
node {
  name: "encode_images/output_pngs/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "encode_images/output_pngs/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "encode_images/output_pngs/while/Identity"
  input: "encode_images/output_pngs/while/EncodePng"
  input: "encode_images/output_pngs/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/add/y"
  op: "Const"
  input: "^encode_images/output_pngs/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/add"
  op: "Add"
  input: "encode_images/output_pngs/while/Identity"
  input: "encode_images/output_pngs/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/NextIteration"
  op: "NextIteration"
  input: "encode_images/output_pngs/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/NextIteration_1"
  op: "NextIteration"
  input: "encode_images/output_pngs/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Exit"
  op: "Exit"
  input: "encode_images/output_pngs/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/while/Exit_1"
  op: "Exit"
  input: "encode_images/output_pngs/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "encode_images/output_pngs/TensorArray_1"
  input: "encode_images/output_pngs/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayStack/range"
  op: "Range"
  input: "encode_images/output_pngs/TensorArrayStack/range/start"
  input: "encode_images/output_pngs/TensorArrayStack/TensorArraySizeV3"
  input: "encode_images/output_pngs/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "encode_images/output_pngs/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "encode_images/output_pngs/TensorArray_1"
  input: "encode_images/output_pngs/TensorArrayStack/range"
  input: "encode_images/output_pngs/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@encode_images/output_pngs/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "generator_loss_content/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator_loss_content"
      }
    }
  }
}
node {
  name: "generator_loss_content"
  op: "ScalarSummary"
  input: "generator_loss_content/tags"
  input: "generator_loss/add/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_loss_1/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator_loss_1"
      }
    }
  }
}
node {
  name: "discriminator_loss_1"
  op: "ScalarSummary"
  input: "discriminator_loss_1/tags"
  input: "discriminator_loss/Mean/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_loss_GAN/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator_loss_GAN"
      }
    }
  }
}
node {
  name: "generator_loss_GAN"
  op: "ScalarSummary"
  input: "generator_loss_GAN/tags"
  input: "generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_1/conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/values"
  op: "HistogramSummary"
  input: "generator/encoder_1/conv/filter/values/tag"
  input: "generator/encoder_1/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_1/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/encoder_1/batchnorm/offset/values/tag"
  input: "generator/encoder_1/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_1/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/encoder_1/batchnorm/scale/values/tag"
  input: "generator/encoder_1/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_2/conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/values"
  op: "HistogramSummary"
  input: "generator/encoder_2/conv/filter/values/tag"
  input: "generator/encoder_2/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_2/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/encoder_2/batchnorm/offset/values/tag"
  input: "generator/encoder_2/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_2/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/encoder_2/batchnorm/scale/values/tag"
  input: "generator/encoder_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_3/dilated_conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/values"
  op: "HistogramSummary"
  input: "generator/encoder_3/dilated_conv/filter/values/tag"
  input: "generator/encoder_3/dilated_conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_3/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/encoder_3/batchnorm/offset/values/tag"
  input: "generator/encoder_3/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_3/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/encoder_3/batchnorm/scale/values/tag"
  input: "generator/encoder_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_4/dilated_conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/values"
  op: "HistogramSummary"
  input: "generator/encoder_4/dilated_conv/filter/values/tag"
  input: "generator/encoder_4/dilated_conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_4/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/encoder_4/batchnorm/offset/values/tag"
  input: "generator/encoder_4/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_4/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/encoder_4/batchnorm/scale/values/tag"
  input: "generator/encoder_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_5/dilated_conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/values"
  op: "HistogramSummary"
  input: "generator/encoder_5/dilated_conv/filter/values/tag"
  input: "generator/encoder_5/dilated_conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_5/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/encoder_5/batchnorm/offset/values/tag"
  input: "generator/encoder_5/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_5/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/encoder_5/batchnorm/scale/values/tag"
  input: "generator/encoder_5/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_6/dilated_conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/values"
  op: "HistogramSummary"
  input: "generator/encoder_6/dilated_conv/filter/values/tag"
  input: "generator/encoder_6/dilated_conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_6/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/encoder_6/batchnorm/offset/values/tag"
  input: "generator/encoder_6/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_6/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/encoder_6/batchnorm/scale/values/tag"
  input: "generator/encoder_6/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_3/conv/filter/values"
      }
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/values"
  op: "HistogramSummary"
  input: "generator/decoder_3/conv/filter/values/tag"
  input: "generator/decoder_3/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_3/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/decoder_3/batchnorm/offset/values/tag"
  input: "generator/decoder_3/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_3/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/decoder_3/batchnorm/scale/values/tag"
  input: "generator/decoder_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_2/upsample/filter/values"
      }
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/values"
  op: "HistogramSummary"
  input: "generator/decoder_2/upsample/filter/values/tag"
  input: "generator/decoder_2/upsample/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_2/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "generator/decoder_2/batchnorm/offset/values/tag"
  input: "generator/decoder_2/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_2/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "generator/decoder_2/batchnorm/scale/values/tag"
  input: "generator/decoder_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_1/upsample/filter/values"
      }
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/values"
  op: "HistogramSummary"
  input: "generator/decoder_1/upsample/filter/values/tag"
  input: "generator/decoder_1/upsample/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_1/conv/filter/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/values"
  op: "HistogramSummary"
  input: "discriminator/layer_1/conv/filter/values/tag"
  input: "discriminator/layer_1/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_2/conv/filter/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/values"
  op: "HistogramSummary"
  input: "discriminator/layer_2/conv/filter/values/tag"
  input: "discriminator/layer_2/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_2/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "discriminator/layer_2/batchnorm/offset/values/tag"
  input: "discriminator/layer_2/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_2/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "discriminator/layer_2/batchnorm/scale/values/tag"
  input: "discriminator/layer_2/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_3/conv/filter/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/values"
  op: "HistogramSummary"
  input: "discriminator/layer_3/conv/filter/values/tag"
  input: "discriminator/layer_3/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_3/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "discriminator/layer_3/batchnorm/offset/values/tag"
  input: "discriminator/layer_3/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_3/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "discriminator/layer_3/batchnorm/scale/values/tag"
  input: "discriminator/layer_3/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_4/conv/filter/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/values"
  op: "HistogramSummary"
  input: "discriminator/layer_4/conv/filter/values/tag"
  input: "discriminator/layer_4/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_4/batchnorm/offset/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/values"
  op: "HistogramSummary"
  input: "discriminator/layer_4/batchnorm/offset/values/tag"
  input: "discriminator/layer_4/batchnorm/offset/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_4/batchnorm/scale/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/values"
  op: "HistogramSummary"
  input: "discriminator/layer_4/batchnorm/scale/values/tag"
  input: "discriminator/layer_4/batchnorm/scale/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/values/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_5/conv/filter/values"
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/values"
  op: "HistogramSummary"
  input: "discriminator/layer_5/conv/filter/values/tag"
  input: "discriminator/layer_5/conv/filter/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_1/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_1/conv/filter/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_1/conv/filter/gradients/tag"
  input: "discriminator_train/gradients/AddN_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_2/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/conv/filter/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_2/conv/filter/gradients/tag"
  input: "discriminator_train/gradients/AddN_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_2/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_2/batchnorm/offset/gradients/tag"
  input: "discriminator_train/gradients/AddN_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_2/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_2/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_2/batchnorm/scale/gradients/tag"
  input: "discriminator_train/gradients/AddN_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_3/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/conv/filter/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_3/conv/filter/gradients/tag"
  input: "discriminator_train/gradients/AddN_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_3/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_3/batchnorm/offset/gradients/tag"
  input: "discriminator_train/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_3/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_3/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_3/batchnorm/scale/gradients/tag"
  input: "discriminator_train/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_4/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/conv/filter/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_4/conv/filter/gradients/tag"
  input: "discriminator_train/gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_4/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_4/batchnorm/offset/gradients/tag"
  input: "discriminator_train/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_4/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_4/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_4/batchnorm/scale/gradients/tag"
  input: "discriminator_train/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "discriminator/layer_5/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "discriminator/layer_5/conv/filter/gradients"
  op: "HistogramSummary"
  input: "discriminator/layer_5/conv/filter/gradients/tag"
  input: "discriminator_train/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_1/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_1/conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_1/conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_1/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_1/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_1/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_1/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_1/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_1/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_1/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_2/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_2/conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_2/conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_2/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_2/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_2/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_2/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_2/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_2/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_3/dilated_conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_3/dilated_conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_3/dilated_conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_3/dilated_conv/atrous_conv2d_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_3/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_3/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_3/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_3/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_3/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_4/dilated_conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_4/dilated_conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_4/dilated_conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_4/dilated_conv/atrous_conv2d_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_4/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_4/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_4/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_4/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_4/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_4/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_5/dilated_conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_5/dilated_conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_5/dilated_conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_5/dilated_conv/atrous_conv2d_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_5/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_5/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_5/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_5/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_5/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_5/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_6/dilated_conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_6/dilated_conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_6/dilated_conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_6/dilated_conv/atrous_conv2d_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_6/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_6/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/encoder_6/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/encoder_6/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/encoder_6/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/encoder/encoder_6/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_3/conv/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_3/conv/filter/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_3/conv/filter/gradients/tag"
  input: "generator_train/gradients/generator/decoder/decoder_3/conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_3/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_3/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_3/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_3/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_3/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/decoder/decoder_3/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_2/upsample/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_2/upsample/filter/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_2/upsample/filter/gradients/tag"
  input: "generator_train/gradients/generator/decoder/decoder_2/upsample/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_2/batchnorm/offset/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/offset/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_2/batchnorm/offset/gradients/tag"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_2/batchnorm/scale/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_2/batchnorm/scale/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_2/batchnorm/scale/gradients/tag"
  input: "generator_train/gradients/generator/decoder/decoder_2/batchnorm/batchnorm/mul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/gradients/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "generator/decoder_1/upsample/filter/gradients"
      }
    }
  }
}
node {
  name: "generator/decoder_1/upsample/filter/gradients"
  op: "HistogramSummary"
  input: "generator/decoder_1/upsample/filter/gradients/tag"
  input: "generator_train/gradients/generator/decoder/decoder_1/upsample/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "parameter_count/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod"
  op: "Prod"
  input: "parameter_count/Shape"
  input: "parameter_count/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_1"
  op: "Prod"
  input: "parameter_count/Shape_1"
  input: "parameter_count/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_2"
  op: "Prod"
  input: "parameter_count/Shape_2"
  input: "parameter_count/Const_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_3"
  op: "Prod"
  input: "parameter_count/Shape_3"
  input: "parameter_count/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_4"
  op: "Prod"
  input: "parameter_count/Shape_4"
  input: "parameter_count/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_5"
  op: "Prod"
  input: "parameter_count/Shape_5"
  input: "parameter_count/Const_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_6"
  op: "Prod"
  input: "parameter_count/Shape_6"
  input: "parameter_count/Const_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_7"
  op: "Prod"
  input: "parameter_count/Shape_7"
  input: "parameter_count/Const_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_8"
  op: "Prod"
  input: "parameter_count/Shape_8"
  input: "parameter_count/Const_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_9"
  op: "Prod"
  input: "parameter_count/Shape_9"
  input: "parameter_count/Const_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_10"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_10"
  op: "Prod"
  input: "parameter_count/Shape_10"
  input: "parameter_count/Const_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_11"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_11"
  op: "Prod"
  input: "parameter_count/Shape_11"
  input: "parameter_count/Const_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_12"
  op: "Prod"
  input: "parameter_count/Shape_12"
  input: "parameter_count/Const_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_13"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_13"
  op: "Prod"
  input: "parameter_count/Shape_13"
  input: "parameter_count/Const_13"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_14"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_14"
  op: "Prod"
  input: "parameter_count/Shape_14"
  input: "parameter_count/Const_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_15"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_15"
  op: "Prod"
  input: "parameter_count/Shape_15"
  input: "parameter_count/Const_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_16"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_16"
  op: "Prod"
  input: "parameter_count/Shape_16"
  input: "parameter_count/Const_16"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_17"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_17"
  op: "Prod"
  input: "parameter_count/Shape_17"
  input: "parameter_count/Const_17"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_18"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_18"
  op: "Prod"
  input: "parameter_count/Shape_18"
  input: "parameter_count/Const_18"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_19"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_19"
  op: "Prod"
  input: "parameter_count/Shape_19"
  input: "parameter_count/Const_19"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_20"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_20"
  op: "Prod"
  input: "parameter_count/Shape_20"
  input: "parameter_count/Const_20"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_21"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_21"
  op: "Prod"
  input: "parameter_count/Shape_21"
  input: "parameter_count/Const_21"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_22"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_22"
  op: "Prod"
  input: "parameter_count/Shape_22"
  input: "parameter_count/Const_22"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_23"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_23"
  op: "Prod"
  input: "parameter_count/Shape_23"
  input: "parameter_count/Const_23"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_24"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_24"
  op: "Prod"
  input: "parameter_count/Shape_24"
  input: "parameter_count/Const_24"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_25"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_25"
  op: "Prod"
  input: "parameter_count/Shape_25"
  input: "parameter_count/Const_25"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_26"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_26"
  op: "Prod"
  input: "parameter_count/Shape_26"
  input: "parameter_count/Const_26"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_27"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_27"
  op: "Prod"
  input: "parameter_count/Shape_27"
  input: "parameter_count/Const_27"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "parameter_count/Const_28"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_28"
  op: "Prod"
  input: "parameter_count/Shape_28"
  input: "parameter_count/Const_28"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_29"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_29"
  op: "Prod"
  input: "parameter_count/Shape_29"
  input: "parameter_count/Const_29"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "parameter_count/Const_30"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_30"
  op: "Prod"
  input: "parameter_count/Shape_30"
  input: "parameter_count/Const_30"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "parameter_count/Const_31"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_31"
  op: "Prod"
  input: "parameter_count/Shape_31"
  input: "parameter_count/Const_31"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_32"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_32"
  op: "Prod"
  input: "parameter_count/Shape_32"
  input: "parameter_count/Const_32"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_33"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_33"
  op: "Prod"
  input: "parameter_count/Shape_33"
  input: "parameter_count/Const_33"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "parameter_count/Const_34"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_34"
  op: "Prod"
  input: "parameter_count/Shape_34"
  input: "parameter_count/Const_34"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Shape_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "parameter_count/Const_35"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/Prod_35"
  op: "Prod"
  input: "parameter_count/Shape_35"
  input: "parameter_count/Const_35"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "parameter_count/Rank/packed"
  op: "Pack"
  input: "parameter_count/Prod"
  input: "parameter_count/Prod_1"
  input: "parameter_count/Prod_2"
  input: "parameter_count/Prod_3"
  input: "parameter_count/Prod_4"
  input: "parameter_count/Prod_5"
  input: "parameter_count/Prod_6"
  input: "parameter_count/Prod_7"
  input: "parameter_count/Prod_8"
  input: "parameter_count/Prod_9"
  input: "parameter_count/Prod_10"
  input: "parameter_count/Prod_11"
  input: "parameter_count/Prod_12"
  input: "parameter_count/Prod_13"
  input: "parameter_count/Prod_14"
  input: "parameter_count/Prod_15"
  input: "parameter_count/Prod_16"
  input: "parameter_count/Prod_17"
  input: "parameter_count/Prod_18"
  input: "parameter_count/Prod_19"
  input: "parameter_count/Prod_20"
  input: "parameter_count/Prod_21"
  input: "parameter_count/Prod_22"
  input: "parameter_count/Prod_23"
  input: "parameter_count/Prod_24"
  input: "parameter_count/Prod_25"
  input: "parameter_count/Prod_26"
  input: "parameter_count/Prod_27"
  input: "parameter_count/Prod_28"
  input: "parameter_count/Prod_29"
  input: "parameter_count/Prod_30"
  input: "parameter_count/Prod_31"
  input: "parameter_count/Prod_32"
  input: "parameter_count/Prod_33"
  input: "parameter_count/Prod_34"
  input: "parameter_count/Prod_35"
  attr {
    key: "N"
    value {
      i: 36
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "parameter_count/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parameter_count/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "parameter_count/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "parameter_count/range"
  op: "Range"
  input: "parameter_count/range/start"
  input: "parameter_count/Rank"
  input: "parameter_count/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "parameter_count/Sum/input"
  op: "Pack"
  input: "parameter_count/Prod"
  input: "parameter_count/Prod_1"
  input: "parameter_count/Prod_2"
  input: "parameter_count/Prod_3"
  input: "parameter_count/Prod_4"
  input: "parameter_count/Prod_5"
  input: "parameter_count/Prod_6"
  input: "parameter_count/Prod_7"
  input: "parameter_count/Prod_8"
  input: "parameter_count/Prod_9"
  input: "parameter_count/Prod_10"
  input: "parameter_count/Prod_11"
  input: "parameter_count/Prod_12"
  input: "parameter_count/Prod_13"
  input: "parameter_count/Prod_14"
  input: "parameter_count/Prod_15"
  input: "parameter_count/Prod_16"
  input: "parameter_count/Prod_17"
  input: "parameter_count/Prod_18"
  input: "parameter_count/Prod_19"
  input: "parameter_count/Prod_20"
  input: "parameter_count/Prod_21"
  input: "parameter_count/Prod_22"
  input: "parameter_count/Prod_23"
  input: "parameter_count/Prod_24"
  input: "parameter_count/Prod_25"
  input: "parameter_count/Prod_26"
  input: "parameter_count/Prod_27"
  input: "parameter_count/Prod_28"
  input: "parameter_count/Prod_29"
  input: "parameter_count/Prod_30"
  input: "parameter_count/Prod_31"
  input: "parameter_count/Prod_32"
  input: "parameter_count/Prod_33"
  input: "parameter_count/Prod_34"
  input: "parameter_count/Prod_35"
  attr {
    key: "N"
    value {
      i: 36
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 36
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "parameter_count/Sum"
  op: "Sum"
  input: "parameter_count/Sum/input"
  input: "parameter_count/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 116
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 116
          }
        }
        string_val: "discriminator/layer_1/conv/filter"
        string_val: "discriminator/layer_1/conv/filter/Adam"
        string_val: "discriminator/layer_1/conv/filter/Adam_1"
        string_val: "discriminator/layer_2/batchnorm/offset"
        string_val: "discriminator/layer_2/batchnorm/offset/Adam"
        string_val: "discriminator/layer_2/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_2/batchnorm/scale"
        string_val: "discriminator/layer_2/batchnorm/scale/Adam"
        string_val: "discriminator/layer_2/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_2/conv/filter"
        string_val: "discriminator/layer_2/conv/filter/Adam"
        string_val: "discriminator/layer_2/conv/filter/Adam_1"
        string_val: "discriminator/layer_3/batchnorm/offset"
        string_val: "discriminator/layer_3/batchnorm/offset/Adam"
        string_val: "discriminator/layer_3/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_3/batchnorm/scale"
        string_val: "discriminator/layer_3/batchnorm/scale/Adam"
        string_val: "discriminator/layer_3/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_3/conv/filter"
        string_val: "discriminator/layer_3/conv/filter/Adam"
        string_val: "discriminator/layer_3/conv/filter/Adam_1"
        string_val: "discriminator/layer_4/batchnorm/offset"
        string_val: "discriminator/layer_4/batchnorm/offset/Adam"
        string_val: "discriminator/layer_4/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_4/batchnorm/scale"
        string_val: "discriminator/layer_4/batchnorm/scale/Adam"
        string_val: "discriminator/layer_4/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_4/conv/filter"
        string_val: "discriminator/layer_4/conv/filter/Adam"
        string_val: "discriminator/layer_4/conv/filter/Adam_1"
        string_val: "discriminator/layer_5/conv/filter"
        string_val: "discriminator/layer_5/conv/filter/Adam"
        string_val: "discriminator/layer_5/conv/filter/Adam_1"
        string_val: "discriminator_loss/Mean/ExponentialMovingAverage"
        string_val: "discriminator_train/beta1_power"
        string_val: "discriminator_train/beta2_power"
        string_val: "generator/decoder_1/upsample/filter"
        string_val: "generator/decoder_1/upsample/filter/Adam"
        string_val: "generator/decoder_1/upsample/filter/Adam_1"
        string_val: "generator/decoder_2/batchnorm/offset"
        string_val: "generator/decoder_2/batchnorm/offset/Adam"
        string_val: "generator/decoder_2/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_2/batchnorm/scale"
        string_val: "generator/decoder_2/batchnorm/scale/Adam"
        string_val: "generator/decoder_2/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_2/upsample/filter"
        string_val: "generator/decoder_2/upsample/filter/Adam"
        string_val: "generator/decoder_2/upsample/filter/Adam_1"
        string_val: "generator/decoder_3/batchnorm/offset"
        string_val: "generator/decoder_3/batchnorm/offset/Adam"
        string_val: "generator/decoder_3/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_3/batchnorm/scale"
        string_val: "generator/decoder_3/batchnorm/scale/Adam"
        string_val: "generator/decoder_3/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_3/conv/filter"
        string_val: "generator/decoder_3/conv/filter/Adam"
        string_val: "generator/decoder_3/conv/filter/Adam_1"
        string_val: "generator/encoder_1/batchnorm/offset"
        string_val: "generator/encoder_1/batchnorm/offset/Adam"
        string_val: "generator/encoder_1/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_1/batchnorm/scale"
        string_val: "generator/encoder_1/batchnorm/scale/Adam"
        string_val: "generator/encoder_1/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_1/conv/filter"
        string_val: "generator/encoder_1/conv/filter/Adam"
        string_val: "generator/encoder_1/conv/filter/Adam_1"
        string_val: "generator/encoder_2/batchnorm/offset"
        string_val: "generator/encoder_2/batchnorm/offset/Adam"
        string_val: "generator/encoder_2/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_2/batchnorm/scale"
        string_val: "generator/encoder_2/batchnorm/scale/Adam"
        string_val: "generator/encoder_2/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_2/conv/filter"
        string_val: "generator/encoder_2/conv/filter/Adam"
        string_val: "generator/encoder_2/conv/filter/Adam_1"
        string_val: "generator/encoder_3/batchnorm/offset"
        string_val: "generator/encoder_3/batchnorm/offset/Adam"
        string_val: "generator/encoder_3/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_3/batchnorm/scale"
        string_val: "generator/encoder_3/batchnorm/scale/Adam"
        string_val: "generator/encoder_3/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_3/dilated_conv/filter"
        string_val: "generator/encoder_3/dilated_conv/filter/Adam"
        string_val: "generator/encoder_3/dilated_conv/filter/Adam_1"
        string_val: "generator/encoder_4/batchnorm/offset"
        string_val: "generator/encoder_4/batchnorm/offset/Adam"
        string_val: "generator/encoder_4/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_4/batchnorm/scale"
        string_val: "generator/encoder_4/batchnorm/scale/Adam"
        string_val: "generator/encoder_4/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_4/dilated_conv/filter"
        string_val: "generator/encoder_4/dilated_conv/filter/Adam"
        string_val: "generator/encoder_4/dilated_conv/filter/Adam_1"
        string_val: "generator/encoder_5/batchnorm/offset"
        string_val: "generator/encoder_5/batchnorm/offset/Adam"
        string_val: "generator/encoder_5/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_5/batchnorm/scale"
        string_val: "generator/encoder_5/batchnorm/scale/Adam"
        string_val: "generator/encoder_5/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_5/dilated_conv/filter"
        string_val: "generator/encoder_5/dilated_conv/filter/Adam"
        string_val: "generator/encoder_5/dilated_conv/filter/Adam_1"
        string_val: "generator/encoder_6/batchnorm/offset"
        string_val: "generator/encoder_6/batchnorm/offset/Adam"
        string_val: "generator/encoder_6/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_6/batchnorm/scale"
        string_val: "generator/encoder_6/batchnorm/scale/Adam"
        string_val: "generator/encoder_6/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_6/dilated_conv/filter"
        string_val: "generator/encoder_6/dilated_conv/filter/Adam"
        string_val: "generator/encoder_6/dilated_conv/filter/Adam_1"
        string_val: "generator_loss/add/ExponentialMovingAverage"
        string_val: "generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
        string_val: "generator_train/beta1_power"
        string_val: "generator_train/beta2_power"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 116
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 116
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "discriminator/layer_1/conv/filter"
  input: "discriminator/layer_1/conv/filter/Adam"
  input: "discriminator/layer_1/conv/filter/Adam_1"
  input: "discriminator/layer_2/batchnorm/offset"
  input: "discriminator/layer_2/batchnorm/offset/Adam"
  input: "discriminator/layer_2/batchnorm/offset/Adam_1"
  input: "discriminator/layer_2/batchnorm/scale"
  input: "discriminator/layer_2/batchnorm/scale/Adam"
  input: "discriminator/layer_2/batchnorm/scale/Adam_1"
  input: "discriminator/layer_2/conv/filter"
  input: "discriminator/layer_2/conv/filter/Adam"
  input: "discriminator/layer_2/conv/filter/Adam_1"
  input: "discriminator/layer_3/batchnorm/offset"
  input: "discriminator/layer_3/batchnorm/offset/Adam"
  input: "discriminator/layer_3/batchnorm/offset/Adam_1"
  input: "discriminator/layer_3/batchnorm/scale"
  input: "discriminator/layer_3/batchnorm/scale/Adam"
  input: "discriminator/layer_3/batchnorm/scale/Adam_1"
  input: "discriminator/layer_3/conv/filter"
  input: "discriminator/layer_3/conv/filter/Adam"
  input: "discriminator/layer_3/conv/filter/Adam_1"
  input: "discriminator/layer_4/batchnorm/offset"
  input: "discriminator/layer_4/batchnorm/offset/Adam"
  input: "discriminator/layer_4/batchnorm/offset/Adam_1"
  input: "discriminator/layer_4/batchnorm/scale"
  input: "discriminator/layer_4/batchnorm/scale/Adam"
  input: "discriminator/layer_4/batchnorm/scale/Adam_1"
  input: "discriminator/layer_4/conv/filter"
  input: "discriminator/layer_4/conv/filter/Adam"
  input: "discriminator/layer_4/conv/filter/Adam_1"
  input: "discriminator/layer_5/conv/filter"
  input: "discriminator/layer_5/conv/filter/Adam"
  input: "discriminator/layer_5/conv/filter/Adam_1"
  input: "discriminator_loss/Mean/ExponentialMovingAverage"
  input: "discriminator_train/beta1_power"
  input: "discriminator_train/beta2_power"
  input: "generator/decoder_1/upsample/filter"
  input: "generator/decoder_1/upsample/filter/Adam"
  input: "generator/decoder_1/upsample/filter/Adam_1"
  input: "generator/decoder_2/batchnorm/offset"
  input: "generator/decoder_2/batchnorm/offset/Adam"
  input: "generator/decoder_2/batchnorm/offset/Adam_1"
  input: "generator/decoder_2/batchnorm/scale"
  input: "generator/decoder_2/batchnorm/scale/Adam"
  input: "generator/decoder_2/batchnorm/scale/Adam_1"
  input: "generator/decoder_2/upsample/filter"
  input: "generator/decoder_2/upsample/filter/Adam"
  input: "generator/decoder_2/upsample/filter/Adam_1"
  input: "generator/decoder_3/batchnorm/offset"
  input: "generator/decoder_3/batchnorm/offset/Adam"
  input: "generator/decoder_3/batchnorm/offset/Adam_1"
  input: "generator/decoder_3/batchnorm/scale"
  input: "generator/decoder_3/batchnorm/scale/Adam"
  input: "generator/decoder_3/batchnorm/scale/Adam_1"
  input: "generator/decoder_3/conv/filter"
  input: "generator/decoder_3/conv/filter/Adam"
  input: "generator/decoder_3/conv/filter/Adam_1"
  input: "generator/encoder_1/batchnorm/offset"
  input: "generator/encoder_1/batchnorm/offset/Adam"
  input: "generator/encoder_1/batchnorm/offset/Adam_1"
  input: "generator/encoder_1/batchnorm/scale"
  input: "generator/encoder_1/batchnorm/scale/Adam"
  input: "generator/encoder_1/batchnorm/scale/Adam_1"
  input: "generator/encoder_1/conv/filter"
  input: "generator/encoder_1/conv/filter/Adam"
  input: "generator/encoder_1/conv/filter/Adam_1"
  input: "generator/encoder_2/batchnorm/offset"
  input: "generator/encoder_2/batchnorm/offset/Adam"
  input: "generator/encoder_2/batchnorm/offset/Adam_1"
  input: "generator/encoder_2/batchnorm/scale"
  input: "generator/encoder_2/batchnorm/scale/Adam"
  input: "generator/encoder_2/batchnorm/scale/Adam_1"
  input: "generator/encoder_2/conv/filter"
  input: "generator/encoder_2/conv/filter/Adam"
  input: "generator/encoder_2/conv/filter/Adam_1"
  input: "generator/encoder_3/batchnorm/offset"
  input: "generator/encoder_3/batchnorm/offset/Adam"
  input: "generator/encoder_3/batchnorm/offset/Adam_1"
  input: "generator/encoder_3/batchnorm/scale"
  input: "generator/encoder_3/batchnorm/scale/Adam"
  input: "generator/encoder_3/batchnorm/scale/Adam_1"
  input: "generator/encoder_3/dilated_conv/filter"
  input: "generator/encoder_3/dilated_conv/filter/Adam"
  input: "generator/encoder_3/dilated_conv/filter/Adam_1"
  input: "generator/encoder_4/batchnorm/offset"
  input: "generator/encoder_4/batchnorm/offset/Adam"
  input: "generator/encoder_4/batchnorm/offset/Adam_1"
  input: "generator/encoder_4/batchnorm/scale"
  input: "generator/encoder_4/batchnorm/scale/Adam"
  input: "generator/encoder_4/batchnorm/scale/Adam_1"
  input: "generator/encoder_4/dilated_conv/filter"
  input: "generator/encoder_4/dilated_conv/filter/Adam"
  input: "generator/encoder_4/dilated_conv/filter/Adam_1"
  input: "generator/encoder_5/batchnorm/offset"
  input: "generator/encoder_5/batchnorm/offset/Adam"
  input: "generator/encoder_5/batchnorm/offset/Adam_1"
  input: "generator/encoder_5/batchnorm/scale"
  input: "generator/encoder_5/batchnorm/scale/Adam"
  input: "generator/encoder_5/batchnorm/scale/Adam_1"
  input: "generator/encoder_5/dilated_conv/filter"
  input: "generator/encoder_5/dilated_conv/filter/Adam"
  input: "generator/encoder_5/dilated_conv/filter/Adam_1"
  input: "generator/encoder_6/batchnorm/offset"
  input: "generator/encoder_6/batchnorm/offset/Adam"
  input: "generator/encoder_6/batchnorm/offset/Adam_1"
  input: "generator/encoder_6/batchnorm/scale"
  input: "generator/encoder_6/batchnorm/scale/Adam"
  input: "generator/encoder_6/batchnorm/scale/Adam_1"
  input: "generator/encoder_6/dilated_conv/filter"
  input: "generator/encoder_6/dilated_conv/filter/Adam"
  input: "generator/encoder_6/dilated_conv/filter/Adam_1"
  input: "generator_loss/add/ExponentialMovingAverage"
  input: "generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
  input: "generator_train/beta1_power"
  input: "generator_train/beta2_power"
  input: "global_step"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_1/conv/filter"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "discriminator/layer_1/conv/filter"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_1/conv/filter/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "discriminator/layer_1/conv/filter/Adam"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_1/conv/filter/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "discriminator/layer_1/conv/filter/Adam_1"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_2/batchnorm/offset"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/offset"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_2/batchnorm/offset/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/offset/Adam"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_2/batchnorm/offset/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/offset/Adam_1"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_2/batchnorm/scale"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/scale"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_2/batchnorm/scale/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/scale/Adam"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_2/batchnorm/scale/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "discriminator/layer_2/batchnorm/scale/Adam_1"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_2/conv/filter"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "discriminator/layer_2/conv/filter"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_2/conv/filter/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "discriminator/layer_2/conv/filter/Adam"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_2/conv/filter/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "discriminator/layer_2/conv/filter/Adam_1"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_3/batchnorm/offset"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/offset"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_3/batchnorm/offset/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/offset/Adam"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_3/batchnorm/offset/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/offset/Adam_1"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_3/batchnorm/scale"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/scale"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_3/batchnorm/scale/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/scale/Adam"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_3/batchnorm/scale/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "discriminator/layer_3/batchnorm/scale/Adam_1"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_3/conv/filter"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "discriminator/layer_3/conv/filter"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_3/conv/filter/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "discriminator/layer_3/conv/filter/Adam"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_3/conv/filter/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "discriminator/layer_3/conv/filter/Adam_1"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_4/batchnorm/offset"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/offset"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_4/batchnorm/offset/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/offset/Adam"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_4/batchnorm/offset/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/offset/Adam_1"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_4/batchnorm/scale"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/scale"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_4/batchnorm/scale/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/scale/Adam"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_4/batchnorm/scale/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "discriminator/layer_4/batchnorm/scale/Adam_1"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_4/conv/filter"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "discriminator/layer_4/conv/filter"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_4/conv/filter/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "discriminator/layer_4/conv/filter/Adam"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_4/conv/filter/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "discriminator/layer_4/conv/filter/Adam_1"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_5/conv/filter"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "discriminator/layer_5/conv/filter"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_5/conv/filter/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "discriminator/layer_5/conv/filter/Adam"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator/layer_5/conv/filter/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "discriminator/layer_5/conv/filter/Adam_1"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "discriminator_loss/Mean/ExponentialMovingAverage"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator_train/beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "discriminator_train/beta1_power"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "discriminator_train/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "discriminator_train/beta2_power"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_1/upsample/filter"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "generator/decoder_1/upsample/filter"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_1/upsample/filter/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "generator/decoder_1/upsample/filter/Adam"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_1/upsample/filter/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "generator/decoder_1/upsample/filter/Adam_1"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_2/batchnorm/offset"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/offset"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_2/batchnorm/offset/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/offset/Adam"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_2/batchnorm/offset/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/offset/Adam_1"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_2/batchnorm/scale"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/scale"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_2/batchnorm/scale/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/scale/Adam"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_2/batchnorm/scale/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "generator/decoder_2/batchnorm/scale/Adam_1"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_2/upsample/filter"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "generator/decoder_2/upsample/filter"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_2/upsample/filter/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "generator/decoder_2/upsample/filter/Adam"
  input: "save/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_2/upsample/filter/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "generator/decoder_2/upsample/filter/Adam_1"
  input: "save/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_3/batchnorm/offset"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/offset"
  input: "save/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_3/batchnorm/offset/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/offset/Adam"
  input: "save/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_3/batchnorm/offset/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/offset/Adam_1"
  input: "save/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_3/batchnorm/scale"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/scale"
  input: "save/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_3/batchnorm/scale/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/scale/Adam"
  input: "save/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_3/batchnorm/scale/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "generator/decoder_3/batchnorm/scale/Adam_1"
  input: "save/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_3/conv/filter"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "generator/decoder_3/conv/filter"
  input: "save/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_3/conv/filter/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "generator/decoder_3/conv/filter/Adam"
  input: "save/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/decoder_3/conv/filter/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "generator/decoder_3/conv/filter/Adam_1"
  input: "save/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_1/batchnorm/offset"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "generator/encoder_1/batchnorm/offset"
  input: "save/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_1/batchnorm/offset/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "generator/encoder_1/batchnorm/offset/Adam"
  input: "save/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_1/batchnorm/offset/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "generator/encoder_1/batchnorm/offset/Adam_1"
  input: "save/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_1/batchnorm/scale"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "generator/encoder_1/batchnorm/scale"
  input: "save/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_1/batchnorm/scale/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "generator/encoder_1/batchnorm/scale/Adam"
  input: "save/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_1/batchnorm/scale/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "generator/encoder_1/batchnorm/scale/Adam_1"
  input: "save/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_1/conv/filter"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "generator/encoder_1/conv/filter"
  input: "save/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_1/conv/filter/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "generator/encoder_1/conv/filter/Adam"
  input: "save/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_1/conv/filter/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "generator/encoder_1/conv/filter/Adam_1"
  input: "save/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_2/batchnorm/offset"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/offset"
  input: "save/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_2/batchnorm/offset/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/offset/Adam"
  input: "save/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_2/batchnorm/offset/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/offset/Adam_1"
  input: "save/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_2/batchnorm/scale"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/scale"
  input: "save/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_2/batchnorm/scale/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/scale/Adam"
  input: "save/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_2/batchnorm/scale/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "generator/encoder_2/batchnorm/scale/Adam_1"
  input: "save/RestoreV2_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_2/conv/filter"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "generator/encoder_2/conv/filter"
  input: "save/RestoreV2_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_73/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_2/conv/filter/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_73/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_73"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_73/tensor_names"
  input: "save/RestoreV2_73/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "generator/encoder_2/conv/filter/Adam"
  input: "save/RestoreV2_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_74/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_2/conv/filter/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_74/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_74"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_74/tensor_names"
  input: "save/RestoreV2_74/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "generator/encoder_2/conv/filter/Adam_1"
  input: "save/RestoreV2_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_75/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_3/batchnorm/offset"
      }
    }
  }
}
node {
  name: "save/RestoreV2_75/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_75"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_75/tensor_names"
  input: "save/RestoreV2_75/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/offset"
  input: "save/RestoreV2_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_76/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_3/batchnorm/offset/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_76/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_76"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_76/tensor_names"
  input: "save/RestoreV2_76/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/offset/Adam"
  input: "save/RestoreV2_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_77/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_3/batchnorm/offset/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_77/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_77"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_77/tensor_names"
  input: "save/RestoreV2_77/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/offset/Adam_1"
  input: "save/RestoreV2_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_78/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_3/batchnorm/scale"
      }
    }
  }
}
node {
  name: "save/RestoreV2_78/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_78"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_78/tensor_names"
  input: "save/RestoreV2_78/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/scale"
  input: "save/RestoreV2_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_79/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_3/batchnorm/scale/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_79/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_79"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_79/tensor_names"
  input: "save/RestoreV2_79/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/scale/Adam"
  input: "save/RestoreV2_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_80/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_3/batchnorm/scale/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_80/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_80"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_80/tensor_names"
  input: "save/RestoreV2_80/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "generator/encoder_3/batchnorm/scale/Adam_1"
  input: "save/RestoreV2_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_81/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_3/dilated_conv/filter"
      }
    }
  }
}
node {
  name: "save/RestoreV2_81/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_81"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_81/tensor_names"
  input: "save/RestoreV2_81/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "generator/encoder_3/dilated_conv/filter"
  input: "save/RestoreV2_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_82/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_3/dilated_conv/filter/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_82/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_82"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_82/tensor_names"
  input: "save/RestoreV2_82/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "generator/encoder_3/dilated_conv/filter/Adam"
  input: "save/RestoreV2_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_83/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_3/dilated_conv/filter/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_83/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_83"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_83/tensor_names"
  input: "save/RestoreV2_83/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "generator/encoder_3/dilated_conv/filter/Adam_1"
  input: "save/RestoreV2_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_84/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_4/batchnorm/offset"
      }
    }
  }
}
node {
  name: "save/RestoreV2_84/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_84"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_84/tensor_names"
  input: "save/RestoreV2_84/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/offset"
  input: "save/RestoreV2_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_85/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_4/batchnorm/offset/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_85/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_85"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_85/tensor_names"
  input: "save/RestoreV2_85/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/offset/Adam"
  input: "save/RestoreV2_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_86/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_4/batchnorm/offset/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_86/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_86"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_86/tensor_names"
  input: "save/RestoreV2_86/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/offset/Adam_1"
  input: "save/RestoreV2_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_87/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_4/batchnorm/scale"
      }
    }
  }
}
node {
  name: "save/RestoreV2_87/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_87"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_87/tensor_names"
  input: "save/RestoreV2_87/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/scale"
  input: "save/RestoreV2_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_88/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_4/batchnorm/scale/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_88/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_88"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_88/tensor_names"
  input: "save/RestoreV2_88/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/scale/Adam"
  input: "save/RestoreV2_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_89/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_4/batchnorm/scale/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_89/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_89"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_89/tensor_names"
  input: "save/RestoreV2_89/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "generator/encoder_4/batchnorm/scale/Adam_1"
  input: "save/RestoreV2_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_90/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_4/dilated_conv/filter"
      }
    }
  }
}
node {
  name: "save/RestoreV2_90/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_90"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_90/tensor_names"
  input: "save/RestoreV2_90/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "generator/encoder_4/dilated_conv/filter"
  input: "save/RestoreV2_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_91/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_4/dilated_conv/filter/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_91/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_91"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_91/tensor_names"
  input: "save/RestoreV2_91/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "generator/encoder_4/dilated_conv/filter/Adam"
  input: "save/RestoreV2_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_92/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_4/dilated_conv/filter/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_92/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_92"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_92/tensor_names"
  input: "save/RestoreV2_92/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "generator/encoder_4/dilated_conv/filter/Adam_1"
  input: "save/RestoreV2_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_93/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_5/batchnorm/offset"
      }
    }
  }
}
node {
  name: "save/RestoreV2_93/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_93"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_93/tensor_names"
  input: "save/RestoreV2_93/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/offset"
  input: "save/RestoreV2_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_94/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_5/batchnorm/offset/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_94/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_94"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_94/tensor_names"
  input: "save/RestoreV2_94/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/offset/Adam"
  input: "save/RestoreV2_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_95/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_5/batchnorm/offset/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_95/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_95"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_95/tensor_names"
  input: "save/RestoreV2_95/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/offset/Adam_1"
  input: "save/RestoreV2_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_96/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_5/batchnorm/scale"
      }
    }
  }
}
node {
  name: "save/RestoreV2_96/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_96"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_96/tensor_names"
  input: "save/RestoreV2_96/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/scale"
  input: "save/RestoreV2_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_97/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_5/batchnorm/scale/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_97/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_97"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_97/tensor_names"
  input: "save/RestoreV2_97/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/scale/Adam"
  input: "save/RestoreV2_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_98/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_5/batchnorm/scale/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_98/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_98"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_98/tensor_names"
  input: "save/RestoreV2_98/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "generator/encoder_5/batchnorm/scale/Adam_1"
  input: "save/RestoreV2_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_99/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_5/dilated_conv/filter"
      }
    }
  }
}
node {
  name: "save/RestoreV2_99/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_99"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_99/tensor_names"
  input: "save/RestoreV2_99/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "generator/encoder_5/dilated_conv/filter"
  input: "save/RestoreV2_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_100/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_5/dilated_conv/filter/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_100/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_100"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_100/tensor_names"
  input: "save/RestoreV2_100/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "generator/encoder_5/dilated_conv/filter/Adam"
  input: "save/RestoreV2_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_101/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_5/dilated_conv/filter/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_101/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_101"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_101/tensor_names"
  input: "save/RestoreV2_101/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "generator/encoder_5/dilated_conv/filter/Adam_1"
  input: "save/RestoreV2_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_102/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_6/batchnorm/offset"
      }
    }
  }
}
node {
  name: "save/RestoreV2_102/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_102"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_102/tensor_names"
  input: "save/RestoreV2_102/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/offset"
  input: "save/RestoreV2_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_103/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_6/batchnorm/offset/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_103/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_103"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_103/tensor_names"
  input: "save/RestoreV2_103/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/offset/Adam"
  input: "save/RestoreV2_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_104/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_6/batchnorm/offset/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_104/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_104"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_104/tensor_names"
  input: "save/RestoreV2_104/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/offset/Adam_1"
  input: "save/RestoreV2_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_105/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_6/batchnorm/scale"
      }
    }
  }
}
node {
  name: "save/RestoreV2_105/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_105"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_105/tensor_names"
  input: "save/RestoreV2_105/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/scale"
  input: "save/RestoreV2_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_106/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_6/batchnorm/scale/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_106/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_106"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_106/tensor_names"
  input: "save/RestoreV2_106/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/scale/Adam"
  input: "save/RestoreV2_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_107/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_6/batchnorm/scale/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_107/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_107"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_107/tensor_names"
  input: "save/RestoreV2_107/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "generator/encoder_6/batchnorm/scale/Adam_1"
  input: "save/RestoreV2_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_108/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_6/dilated_conv/filter"
      }
    }
  }
}
node {
  name: "save/RestoreV2_108/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_108"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_108/tensor_names"
  input: "save/RestoreV2_108/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "generator/encoder_6/dilated_conv/filter"
  input: "save/RestoreV2_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_109/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_6/dilated_conv/filter/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_109/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_109"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_109/tensor_names"
  input: "save/RestoreV2_109/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "generator/encoder_6/dilated_conv/filter/Adam"
  input: "save/RestoreV2_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_110/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator/encoder_6/dilated_conv/filter/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_110/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_110"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_110/tensor_names"
  input: "save/RestoreV2_110/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "generator/encoder_6/dilated_conv/filter/Adam_1"
  input: "save/RestoreV2_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_111/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator_loss/add/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/RestoreV2_111/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_111"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_111/tensor_names"
  input: "save/RestoreV2_111/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "generator_loss/add/ExponentialMovingAverage"
  input: "save/RestoreV2_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/add/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_112/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
}
node {
  name: "save/RestoreV2_112/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_112"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_112/tensor_names"
  input: "save/RestoreV2_112/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
  input: "save/RestoreV2_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_113/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator_train/beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_113/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_113"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_113/tensor_names"
  input: "save/RestoreV2_113/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "generator_train/beta1_power"
  input: "save/RestoreV2_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_114/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "generator_train/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_114/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_114"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_114/tensor_names"
  input: "save/RestoreV2_114/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "generator_train/beta2_power"
  input: "save/RestoreV2_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_115/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2_115/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_115"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_115/tensor_names"
  input: "save/RestoreV2_115/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2_115"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "generator/encoder_1/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "generator/encoder_1/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "generator/encoder_1/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/dilated_conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/dilated_conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/dilated_conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/dilated_conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/upsample/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "generator/decoder_1/upsample/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "discriminator/layer_1/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/batchnorm/offset"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/batchnorm/scale"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "discriminator/layer_5/conv/filter"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "discriminator_train/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "discriminator_train/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "discriminator/layer_1/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "discriminator/layer_1/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "discriminator/layer_2/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "discriminator/layer_3/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "discriminator/layer_4/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "discriminator/layer_5/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "discriminator/layer_5/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator/layer_5/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "generator_train/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "generator_train/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "generator/encoder_1/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "generator/encoder_1/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "generator/encoder_1/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "generator/encoder_1/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "generator/encoder_1/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "generator/encoder_1/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_1/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "generator/encoder_2/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/dilated_conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/dilated_conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "generator/encoder_3/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/dilated_conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/dilated_conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "generator/encoder_4/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_4/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/dilated_conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/dilated_conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "generator/encoder_5/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_5/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/dilated_conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/dilated_conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/dilated_conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "generator/encoder_6/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/encoder_6/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/conv/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/conv/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/conv/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "generator/decoder_3/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_3/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/upsample/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/upsample/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/batchnorm/offset/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/batchnorm/offset/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/offset"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/batchnorm/scale/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "generator/decoder_2/batchnorm/scale/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_2/batchnorm/scale"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "generator/decoder_1/upsample/filter/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "generator/decoder_1/upsample/filter/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator/decoder_1/upsample/filter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "generator_loss/add/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/add/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "discriminator_loss/Mean/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  input: "report_uninitialized_variables/IsVariableInitialized_86"
  input: "report_uninitialized_variables/IsVariableInitialized_87"
  input: "report_uninitialized_variables/IsVariableInitialized_88"
  input: "report_uninitialized_variables/IsVariableInitialized_89"
  input: "report_uninitialized_variables/IsVariableInitialized_90"
  input: "report_uninitialized_variables/IsVariableInitialized_91"
  input: "report_uninitialized_variables/IsVariableInitialized_92"
  input: "report_uninitialized_variables/IsVariableInitialized_93"
  input: "report_uninitialized_variables/IsVariableInitialized_94"
  input: "report_uninitialized_variables/IsVariableInitialized_95"
  input: "report_uninitialized_variables/IsVariableInitialized_96"
  input: "report_uninitialized_variables/IsVariableInitialized_97"
  input: "report_uninitialized_variables/IsVariableInitialized_98"
  input: "report_uninitialized_variables/IsVariableInitialized_99"
  input: "report_uninitialized_variables/IsVariableInitialized_100"
  input: "report_uninitialized_variables/IsVariableInitialized_101"
  input: "report_uninitialized_variables/IsVariableInitialized_102"
  input: "report_uninitialized_variables/IsVariableInitialized_103"
  input: "report_uninitialized_variables/IsVariableInitialized_104"
  input: "report_uninitialized_variables/IsVariableInitialized_105"
  input: "report_uninitialized_variables/IsVariableInitialized_106"
  input: "report_uninitialized_variables/IsVariableInitialized_107"
  input: "report_uninitialized_variables/IsVariableInitialized_108"
  input: "report_uninitialized_variables/IsVariableInitialized_109"
  input: "report_uninitialized_variables/IsVariableInitialized_110"
  input: "report_uninitialized_variables/IsVariableInitialized_111"
  input: "report_uninitialized_variables/IsVariableInitialized_112"
  input: "report_uninitialized_variables/IsVariableInitialized_113"
  input: "report_uninitialized_variables/IsVariableInitialized_114"
  input: "report_uninitialized_variables/IsVariableInitialized_115"
  attr {
    key: "N"
    value {
      i: 116
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 116
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 116
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 116
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 116
          }
        }
        string_val: "generator/encoder_1/conv/filter"
        string_val: "generator/encoder_1/batchnorm/offset"
        string_val: "generator/encoder_1/batchnorm/scale"
        string_val: "generator/encoder_2/conv/filter"
        string_val: "generator/encoder_2/batchnorm/offset"
        string_val: "generator/encoder_2/batchnorm/scale"
        string_val: "generator/encoder_3/dilated_conv/filter"
        string_val: "generator/encoder_3/batchnorm/offset"
        string_val: "generator/encoder_3/batchnorm/scale"
        string_val: "generator/encoder_4/dilated_conv/filter"
        string_val: "generator/encoder_4/batchnorm/offset"
        string_val: "generator/encoder_4/batchnorm/scale"
        string_val: "generator/encoder_5/dilated_conv/filter"
        string_val: "generator/encoder_5/batchnorm/offset"
        string_val: "generator/encoder_5/batchnorm/scale"
        string_val: "generator/encoder_6/dilated_conv/filter"
        string_val: "generator/encoder_6/batchnorm/offset"
        string_val: "generator/encoder_6/batchnorm/scale"
        string_val: "generator/decoder_3/conv/filter"
        string_val: "generator/decoder_3/batchnorm/offset"
        string_val: "generator/decoder_3/batchnorm/scale"
        string_val: "generator/decoder_2/upsample/filter"
        string_val: "generator/decoder_2/batchnorm/offset"
        string_val: "generator/decoder_2/batchnorm/scale"
        string_val: "generator/decoder_1/upsample/filter"
        string_val: "discriminator/layer_1/conv/filter"
        string_val: "discriminator/layer_2/conv/filter"
        string_val: "discriminator/layer_2/batchnorm/offset"
        string_val: "discriminator/layer_2/batchnorm/scale"
        string_val: "discriminator/layer_3/conv/filter"
        string_val: "discriminator/layer_3/batchnorm/offset"
        string_val: "discriminator/layer_3/batchnorm/scale"
        string_val: "discriminator/layer_4/conv/filter"
        string_val: "discriminator/layer_4/batchnorm/offset"
        string_val: "discriminator/layer_4/batchnorm/scale"
        string_val: "discriminator/layer_5/conv/filter"
        string_val: "discriminator_train/beta1_power"
        string_val: "discriminator_train/beta2_power"
        string_val: "discriminator/layer_1/conv/filter/Adam"
        string_val: "discriminator/layer_1/conv/filter/Adam_1"
        string_val: "discriminator/layer_2/conv/filter/Adam"
        string_val: "discriminator/layer_2/conv/filter/Adam_1"
        string_val: "discriminator/layer_2/batchnorm/offset/Adam"
        string_val: "discriminator/layer_2/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_2/batchnorm/scale/Adam"
        string_val: "discriminator/layer_2/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_3/conv/filter/Adam"
        string_val: "discriminator/layer_3/conv/filter/Adam_1"
        string_val: "discriminator/layer_3/batchnorm/offset/Adam"
        string_val: "discriminator/layer_3/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_3/batchnorm/scale/Adam"
        string_val: "discriminator/layer_3/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_4/conv/filter/Adam"
        string_val: "discriminator/layer_4/conv/filter/Adam_1"
        string_val: "discriminator/layer_4/batchnorm/offset/Adam"
        string_val: "discriminator/layer_4/batchnorm/offset/Adam_1"
        string_val: "discriminator/layer_4/batchnorm/scale/Adam"
        string_val: "discriminator/layer_4/batchnorm/scale/Adam_1"
        string_val: "discriminator/layer_5/conv/filter/Adam"
        string_val: "discriminator/layer_5/conv/filter/Adam_1"
        string_val: "generator_train/beta1_power"
        string_val: "generator_train/beta2_power"
        string_val: "generator/encoder_1/conv/filter/Adam"
        string_val: "generator/encoder_1/conv/filter/Adam_1"
        string_val: "generator/encoder_1/batchnorm/offset/Adam"
        string_val: "generator/encoder_1/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_1/batchnorm/scale/Adam"
        string_val: "generator/encoder_1/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_2/conv/filter/Adam"
        string_val: "generator/encoder_2/conv/filter/Adam_1"
        string_val: "generator/encoder_2/batchnorm/offset/Adam"
        string_val: "generator/encoder_2/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_2/batchnorm/scale/Adam"
        string_val: "generator/encoder_2/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_3/dilated_conv/filter/Adam"
        string_val: "generator/encoder_3/dilated_conv/filter/Adam_1"
        string_val: "generator/encoder_3/batchnorm/offset/Adam"
        string_val: "generator/encoder_3/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_3/batchnorm/scale/Adam"
        string_val: "generator/encoder_3/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_4/dilated_conv/filter/Adam"
        string_val: "generator/encoder_4/dilated_conv/filter/Adam_1"
        string_val: "generator/encoder_4/batchnorm/offset/Adam"
        string_val: "generator/encoder_4/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_4/batchnorm/scale/Adam"
        string_val: "generator/encoder_4/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_5/dilated_conv/filter/Adam"
        string_val: "generator/encoder_5/dilated_conv/filter/Adam_1"
        string_val: "generator/encoder_5/batchnorm/offset/Adam"
        string_val: "generator/encoder_5/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_5/batchnorm/scale/Adam"
        string_val: "generator/encoder_5/batchnorm/scale/Adam_1"
        string_val: "generator/encoder_6/dilated_conv/filter/Adam"
        string_val: "generator/encoder_6/dilated_conv/filter/Adam_1"
        string_val: "generator/encoder_6/batchnorm/offset/Adam"
        string_val: "generator/encoder_6/batchnorm/offset/Adam_1"
        string_val: "generator/encoder_6/batchnorm/scale/Adam"
        string_val: "generator/encoder_6/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_3/conv/filter/Adam"
        string_val: "generator/decoder_3/conv/filter/Adam_1"
        string_val: "generator/decoder_3/batchnorm/offset/Adam"
        string_val: "generator/decoder_3/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_3/batchnorm/scale/Adam"
        string_val: "generator/decoder_3/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_2/upsample/filter/Adam"
        string_val: "generator/decoder_2/upsample/filter/Adam_1"
        string_val: "generator/decoder_2/batchnorm/offset/Adam"
        string_val: "generator/decoder_2/batchnorm/offset/Adam_1"
        string_val: "generator/decoder_2/batchnorm/scale/Adam"
        string_val: "generator/decoder_2/batchnorm/scale/Adam_1"
        string_val: "generator/decoder_1/upsample/filter/Adam"
        string_val: "generator/decoder_1/upsample/filter/Adam_1"
        string_val: "generator_loss/add/ExponentialMovingAverage"
        string_val: "discriminator_loss/Mean/ExponentialMovingAverage"
        string_val: "generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 116
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 116
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 116
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 116
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^generator/encoder_1/conv/filter/Assign"
  input: "^generator/encoder_1/batchnorm/offset/Assign"
  input: "^generator/encoder_1/batchnorm/scale/Assign"
  input: "^generator/encoder_2/conv/filter/Assign"
  input: "^generator/encoder_2/batchnorm/offset/Assign"
  input: "^generator/encoder_2/batchnorm/scale/Assign"
  input: "^generator/encoder_3/dilated_conv/filter/Assign"
  input: "^generator/encoder_3/batchnorm/offset/Assign"
  input: "^generator/encoder_3/batchnorm/scale/Assign"
  input: "^generator/encoder_4/dilated_conv/filter/Assign"
  input: "^generator/encoder_4/batchnorm/offset/Assign"
  input: "^generator/encoder_4/batchnorm/scale/Assign"
  input: "^generator/encoder_5/dilated_conv/filter/Assign"
  input: "^generator/encoder_5/batchnorm/offset/Assign"
  input: "^generator/encoder_5/batchnorm/scale/Assign"
  input: "^generator/encoder_6/dilated_conv/filter/Assign"
  input: "^generator/encoder_6/batchnorm/offset/Assign"
  input: "^generator/encoder_6/batchnorm/scale/Assign"
  input: "^generator/decoder_3/conv/filter/Assign"
  input: "^generator/decoder_3/batchnorm/offset/Assign"
  input: "^generator/decoder_3/batchnorm/scale/Assign"
  input: "^generator/decoder_2/upsample/filter/Assign"
  input: "^generator/decoder_2/batchnorm/offset/Assign"
  input: "^generator/decoder_2/batchnorm/scale/Assign"
  input: "^generator/decoder_1/upsample/filter/Assign"
  input: "^discriminator/layer_1/conv/filter/Assign"
  input: "^discriminator/layer_2/conv/filter/Assign"
  input: "^discriminator/layer_2/batchnorm/offset/Assign"
  input: "^discriminator/layer_2/batchnorm/scale/Assign"
  input: "^discriminator/layer_3/conv/filter/Assign"
  input: "^discriminator/layer_3/batchnorm/offset/Assign"
  input: "^discriminator/layer_3/batchnorm/scale/Assign"
  input: "^discriminator/layer_4/conv/filter/Assign"
  input: "^discriminator/layer_4/batchnorm/offset/Assign"
  input: "^discriminator/layer_4/batchnorm/scale/Assign"
  input: "^discriminator/layer_5/conv/filter/Assign"
  input: "^discriminator_train/beta1_power/Assign"
  input: "^discriminator_train/beta2_power/Assign"
  input: "^discriminator/layer_1/conv/filter/Adam/Assign"
  input: "^discriminator/layer_1/conv/filter/Adam_1/Assign"
  input: "^discriminator/layer_2/conv/filter/Adam/Assign"
  input: "^discriminator/layer_2/conv/filter/Adam_1/Assign"
  input: "^discriminator/layer_2/batchnorm/offset/Adam/Assign"
  input: "^discriminator/layer_2/batchnorm/offset/Adam_1/Assign"
  input: "^discriminator/layer_2/batchnorm/scale/Adam/Assign"
  input: "^discriminator/layer_2/batchnorm/scale/Adam_1/Assign"
  input: "^discriminator/layer_3/conv/filter/Adam/Assign"
  input: "^discriminator/layer_3/conv/filter/Adam_1/Assign"
  input: "^discriminator/layer_3/batchnorm/offset/Adam/Assign"
  input: "^discriminator/layer_3/batchnorm/offset/Adam_1/Assign"
  input: "^discriminator/layer_3/batchnorm/scale/Adam/Assign"
  input: "^discriminator/layer_3/batchnorm/scale/Adam_1/Assign"
  input: "^discriminator/layer_4/conv/filter/Adam/Assign"
  input: "^discriminator/layer_4/conv/filter/Adam_1/Assign"
  input: "^discriminator/layer_4/batchnorm/offset/Adam/Assign"
  input: "^discriminator/layer_4/batchnorm/offset/Adam_1/Assign"
  input: "^discriminator/layer_4/batchnorm/scale/Adam/Assign"
  input: "^discriminator/layer_4/batchnorm/scale/Adam_1/Assign"
  input: "^discriminator/layer_5/conv/filter/Adam/Assign"
  input: "^discriminator/layer_5/conv/filter/Adam_1/Assign"
  input: "^generator_train/beta1_power/Assign"
  input: "^generator_train/beta2_power/Assign"
  input: "^generator/encoder_1/conv/filter/Adam/Assign"
  input: "^generator/encoder_1/conv/filter/Adam_1/Assign"
  input: "^generator/encoder_1/batchnorm/offset/Adam/Assign"
  input: "^generator/encoder_1/batchnorm/offset/Adam_1/Assign"
  input: "^generator/encoder_1/batchnorm/scale/Adam/Assign"
  input: "^generator/encoder_1/batchnorm/scale/Adam_1/Assign"
  input: "^generator/encoder_2/conv/filter/Adam/Assign"
  input: "^generator/encoder_2/conv/filter/Adam_1/Assign"
  input: "^generator/encoder_2/batchnorm/offset/Adam/Assign"
  input: "^generator/encoder_2/batchnorm/offset/Adam_1/Assign"
  input: "^generator/encoder_2/batchnorm/scale/Adam/Assign"
  input: "^generator/encoder_2/batchnorm/scale/Adam_1/Assign"
  input: "^generator/encoder_3/dilated_conv/filter/Adam/Assign"
  input: "^generator/encoder_3/dilated_conv/filter/Adam_1/Assign"
  input: "^generator/encoder_3/batchnorm/offset/Adam/Assign"
  input: "^generator/encoder_3/batchnorm/offset/Adam_1/Assign"
  input: "^generator/encoder_3/batchnorm/scale/Adam/Assign"
  input: "^generator/encoder_3/batchnorm/scale/Adam_1/Assign"
  input: "^generator/encoder_4/dilated_conv/filter/Adam/Assign"
  input: "^generator/encoder_4/dilated_conv/filter/Adam_1/Assign"
  input: "^generator/encoder_4/batchnorm/offset/Adam/Assign"
  input: "^generator/encoder_4/batchnorm/offset/Adam_1/Assign"
  input: "^generator/encoder_4/batchnorm/scale/Adam/Assign"
  input: "^generator/encoder_4/batchnorm/scale/Adam_1/Assign"
  input: "^generator/encoder_5/dilated_conv/filter/Adam/Assign"
  input: "^generator/encoder_5/dilated_conv/filter/Adam_1/Assign"
  input: "^generator/encoder_5/batchnorm/offset/Adam/Assign"
  input: "^generator/encoder_5/batchnorm/offset/Adam_1/Assign"
  input: "^generator/encoder_5/batchnorm/scale/Adam/Assign"
  input: "^generator/encoder_5/batchnorm/scale/Adam_1/Assign"
  input: "^generator/encoder_6/dilated_conv/filter/Adam/Assign"
  input: "^generator/encoder_6/dilated_conv/filter/Adam_1/Assign"
  input: "^generator/encoder_6/batchnorm/offset/Adam/Assign"
  input: "^generator/encoder_6/batchnorm/offset/Adam_1/Assign"
  input: "^generator/encoder_6/batchnorm/scale/Adam/Assign"
  input: "^generator/encoder_6/batchnorm/scale/Adam_1/Assign"
  input: "^generator/decoder_3/conv/filter/Adam/Assign"
  input: "^generator/decoder_3/conv/filter/Adam_1/Assign"
  input: "^generator/decoder_3/batchnorm/offset/Adam/Assign"
  input: "^generator/decoder_3/batchnorm/offset/Adam_1/Assign"
  input: "^generator/decoder_3/batchnorm/scale/Adam/Assign"
  input: "^generator/decoder_3/batchnorm/scale/Adam_1/Assign"
  input: "^generator/decoder_2/upsample/filter/Adam/Assign"
  input: "^generator/decoder_2/upsample/filter/Adam_1/Assign"
  input: "^generator/decoder_2/batchnorm/offset/Adam/Assign"
  input: "^generator/decoder_2/batchnorm/offset/Adam_1/Assign"
  input: "^generator/decoder_2/batchnorm/scale/Adam/Assign"
  input: "^generator/decoder_2/batchnorm/scale/Adam_1/Assign"
  input: "^generator/decoder_1/upsample/filter/Adam/Assign"
  input: "^generator/decoder_1/upsample/filter/Adam_1/Assign"
  input: "^generator_loss/add/ExponentialMovingAverage/Assign"
  input: "^discriminator_loss/Mean/ExponentialMovingAverage/Assign"
  input: "^generator_loss/generator_gan_loss/Mean/ExponentialMovingAverage/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "load_images/input_producer/fraction_of_32_full"
  input: "shuffle_batch/fraction_over_800_of_800_full"
  input: "images_summary/images"
  input: "targets_summary/targets"
  input: "outputs_summary/outputs"
  input: "generator_loss_content"
  input: "discriminator_loss_1"
  input: "generator_loss_GAN"
  input: "generator/encoder_1/conv/filter/values"
  input: "generator/encoder_1/batchnorm/offset/values"
  input: "generator/encoder_1/batchnorm/scale/values"
  input: "generator/encoder_2/conv/filter/values"
  input: "generator/encoder_2/batchnorm/offset/values"
  input: "generator/encoder_2/batchnorm/scale/values"
  input: "generator/encoder_3/dilated_conv/filter/values"
  input: "generator/encoder_3/batchnorm/offset/values"
  input: "generator/encoder_3/batchnorm/scale/values"
  input: "generator/encoder_4/dilated_conv/filter/values"
  input: "generator/encoder_4/batchnorm/offset/values"
  input: "generator/encoder_4/batchnorm/scale/values"
  input: "generator/encoder_5/dilated_conv/filter/values"
  input: "generator/encoder_5/batchnorm/offset/values"
  input: "generator/encoder_5/batchnorm/scale/values"
  input: "generator/encoder_6/dilated_conv/filter/values"
  input: "generator/encoder_6/batchnorm/offset/values"
  input: "generator/encoder_6/batchnorm/scale/values"
  input: "generator/decoder_3/conv/filter/values"
  input: "generator/decoder_3/batchnorm/offset/values"
  input: "generator/decoder_3/batchnorm/scale/values"
  input: "generator/decoder_2/upsample/filter/values"
  input: "generator/decoder_2/batchnorm/offset/values"
  input: "generator/decoder_2/batchnorm/scale/values"
  input: "generator/decoder_1/upsample/filter/values"
  input: "discriminator/layer_1/conv/filter/values"
  input: "discriminator/layer_2/conv/filter/values"
  input: "discriminator/layer_2/batchnorm/offset/values"
  input: "discriminator/layer_2/batchnorm/scale/values"
  input: "discriminator/layer_3/conv/filter/values"
  input: "discriminator/layer_3/batchnorm/offset/values"
  input: "discriminator/layer_3/batchnorm/scale/values"
  input: "discriminator/layer_4/conv/filter/values"
  input: "discriminator/layer_4/batchnorm/offset/values"
  input: "discriminator/layer_4/batchnorm/scale/values"
  input: "discriminator/layer_5/conv/filter/values"
  input: "discriminator/layer_1/conv/filter/gradients"
  input: "discriminator/layer_2/conv/filter/gradients"
  input: "discriminator/layer_2/batchnorm/offset/gradients"
  input: "discriminator/layer_2/batchnorm/scale/gradients"
  input: "discriminator/layer_3/conv/filter/gradients"
  input: "discriminator/layer_3/batchnorm/offset/gradients"
  input: "discriminator/layer_3/batchnorm/scale/gradients"
  input: "discriminator/layer_4/conv/filter/gradients"
  input: "discriminator/layer_4/batchnorm/offset/gradients"
  input: "discriminator/layer_4/batchnorm/scale/gradients"
  input: "discriminator/layer_5/conv/filter/gradients"
  input: "generator/encoder_1/conv/filter/gradients"
  input: "generator/encoder_1/batchnorm/offset/gradients"
  input: "generator/encoder_1/batchnorm/scale/gradients"
  input: "generator/encoder_2/conv/filter/gradients"
  input: "generator/encoder_2/batchnorm/offset/gradients"
  input: "generator/encoder_2/batchnorm/scale/gradients"
  input: "generator/encoder_3/dilated_conv/filter/gradients"
  input: "generator/encoder_3/batchnorm/offset/gradients"
  input: "generator/encoder_3/batchnorm/scale/gradients"
  input: "generator/encoder_4/dilated_conv/filter/gradients"
  input: "generator/encoder_4/batchnorm/offset/gradients"
  input: "generator/encoder_4/batchnorm/scale/gradients"
  input: "generator/encoder_5/dilated_conv/filter/gradients"
  input: "generator/encoder_5/batchnorm/offset/gradients"
  input: "generator/encoder_5/batchnorm/scale/gradients"
  input: "generator/encoder_6/dilated_conv/filter/gradients"
  input: "generator/encoder_6/batchnorm/offset/gradients"
  input: "generator/encoder_6/batchnorm/scale/gradients"
  input: "generator/decoder_3/conv/filter/gradients"
  input: "generator/decoder_3/batchnorm/offset/gradients"
  input: "generator/decoder_3/batchnorm/scale/gradients"
  input: "generator/decoder_2/upsample/filter/gradients"
  input: "generator/decoder_2/batchnorm/offset/gradients"
  input: "generator/decoder_2/batchnorm/scale/gradients"
  input: "generator/decoder_1/upsample/filter/gradients"
  attr {
    key: "N"
    value {
      i: 80
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
versions {
  producer: 21
}
